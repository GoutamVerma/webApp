function e(e,t,l,i){return new(l||(l=Promise))((function(n,d){function o(e){try{a(i.next(e))}catch(e){d(e)}}function c(e){try{a(i.throw(e))}catch(e){d(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t)}))).then(o,c)}a((i=i.apply(e,t||[])).next())}))}function t(e,t,l,i){return new(l||(l=Promise))((function(n,d){function o(e){try{a(i.next(e))}catch(e){d(e)}}function c(e){try{a(i.throw(e))}catch(e){d(e)}}function a(e){var t;e.done?n(e.value):(t=e.value,t instanceof l?t:new l((function(e){e(t)}))).then(o,c)}a((i=i.apply(e,t||[])).next())}))}var l;!function(e){e.formPost="form_post",e.query="query",e.direct="direct"}(l||(l={}));const i="{{token}}",n="{{username}}",d="{{scope}}",o="{{clientID}}",c="{{clientSecret}}";var a;!function(e){e.ConfigData="config_data",e.OIDCProviderMetaData="oidc_provider_meta_data",e.SessionData="session_data",e.TemporaryData="temporary_data"}(a||(a={}));const s="refresh_token_timer",Z="pkce_code_verifier",u="#",r=["RS256","RS512","RS384","PS256"],b="code",h="session_state",m="sign_out_url",I="sign_out_success",G="state",p="openid";var g;!function(e){e.Include="include",e.SameOrigin="same-origin",e.Omit="omit"}(g||(g={}));class X{constructor(e,t,l){this.message=l,this.name=t,this.code=e,Object.setPrototypeOf(this,new.target.prototype)}}class y{constructor(){}static filterClaimsFromIDTokenPayload(e){const t=Object.assign({},e);null==t||delete t.iss,null==t||delete t.aud,null==t||delete t.exp,null==t||delete t.iat,null==t||delete t.acr,null==t||delete t.amr,null==t||delete t.azp,null==t||delete t.auth_time,null==t||delete t.nonce,null==t||delete t.c_hash,null==t||delete t.at_hash,null==t||delete t.nbf,null==t||delete t.isk,null==t||delete t.sid;const l={};return Object.entries(t).forEach((([e,t])=>{const i=e.split("_").map(((e,t)=>0===t?e:[e[0].toUpperCase(),...e.slice(1)].join(""))).join("");l[i]=t})),l}static getTokenRequestHeaders(){return{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"}}static generateStateParamForRequestCorrelation(e,t){const l=parseInt(e.split("#")[1]);return t?`${t}_request_${l}`:`request_${l}`}static extractPKCEKeyFromStateParam(e){return`pkce_code_verifier#${parseInt(e.split("request_")[1])}`}}y.getTenantDomainFromIdTokenPayload=(e,t="@")=>{const l=e.sub.split(t);return l.length>2?l[l.length-1]:""};class V{constructor(e,l){this._dataLayer=e,this._config=()=>t(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>t(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()})),this._cryptoHelper=l}resolveEndpoints(e){return t(this,void 0,void 0,(function*(){const t={},l=yield this._config();return l.endpoints&&Object.keys(l.endpoints).forEach((e=>{const i=e.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));t[i]=(null==l?void 0:l.endpoints)?l.endpoints[e]:""})),Object.assign(Object.assign({},e),t)}))}resolveEndpointsExplicitly(){return t(this,void 0,void 0,(function*(){const e={},t=yield this._config();if(!t.endpoints||!["authorization_endpoint","end_session_endpoint","jwks_uri","check_session_iframe","revocation_endpoint","token_endpoint","issuer","userinfo_endpoint"].every((e=>!!t.endpoints&&Object.keys(t.endpoints).some((t=>t.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`))===e)))))throw new X("JS-AUTH_HELPER-REE-NF01","Required endpoints missing","Some or all of the required endpoints are missing in the object passed to the `endpoints` attribute of the`AuthConfig` object.");return t.endpoints&&Object.keys(t.endpoints).forEach((l=>{const i=l.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));e[i]=(null==t?void 0:t.endpoints)?t.endpoints[l]:""})),Object.assign({},e)}))}resolveEndpointsByBaseURL(){return t(this,void 0,void 0,(function*(){const e={},t=yield this._config(),l=t.baseUrl;if(!l)throw new X("JS-AUTH_HELPER_REBO-NF01","Base URL not defined.","Base URL is not defined in AuthClient config.");t.endpoints&&Object.keys(t.endpoints).forEach((l=>{const i=l.replace(/[A-Z]/g,(e=>`_${e.toLowerCase()}`));e[i]=(null==t?void 0:t.endpoints)?t.endpoints[l]:""}));const i={authorization_endpoint:`${l}/oauth2/authorize`,end_session_endpoint:`${l}/oidc/logout`,issuer:`${l}/oauth2/token`,jwks_uri:`${l}/oauth2/jwks`,check_session_iframe:`${l}/oidc/checksession`,revocation_endpoint:`${l}/oauth2/revoke`,token_endpoint:`${l}/oauth2/token`,userinfo_endpoint:`${l}/oauth2/userinfo`};return Object.assign(Object.assign({},i),e)}))}validateIdToken(e){var l;return t(this,void 0,void 0,(function*(){const t=(yield this._dataLayer.getOIDCProviderMetaData()).jwks_uri,i=yield this._config();if(!t||0===t.trim().length)throw new X("JS_AUTH_HELPER-VIT-NF01","JWKS endpoint not found.","No JWKS endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the JWKS endpoint passed to the SDK is empty.");let n;try{n=yield fetch(t,{credentials:i.sendCookiesInRequests?g.Include:g.SameOrigin})}catch(t){throw new X("JS-AUTH_HELPER-VIT-NE02","Request to jwks endpoint failed.",null!=t?t:"The request sent to get the jwks from the server failed.")}if(200!==n.status||!n.ok)throw new X("JS-AUTH_HELPER-VIT-HE03",`Invalid response status received for jwks request (${n.statusText}).`,yield n.json());const d=(yield this._oidcProviderMetaData()).issuer,{keys:o}=yield n.json(),c=yield this._cryptoHelper.getJWKForTheIdToken(e.split(".")[0],o);return this._cryptoHelper.isValidIdToken(e,c,(yield this._config()).clientID,null!=d?d:"",this._cryptoHelper.decodeIDToken(e).sub,(yield this._config()).clockTolerance,null===(l=(yield this._config()).validateIDTokenIssuer)||void 0===l||l)}))}getAuthenticatedUserInfo(e){var t,l,i,n;const d=this._cryptoHelper.decodeIDToken(e),o=y.getTenantDomainFromIdTokenPayload(d),c=null!==(t=null==d?void 0:d.username)&&void 0!==t?t:"",a=null!==(l=d.given_name)&&void 0!==l?l:"",s=null!==(i=d.family_name)&&void 0!==i?i:"",Z=a&&s?`${a} ${s}`:a||s||"",u=null!==(n=d.preferred_username)&&void 0!==n?n:Z;return Object.assign({displayName:u,tenantDomain:o,username:c},y.filterClaimsFromIDTokenPayload(d))}replaceCustomGrantTemplateTags(e,l){var i;return t(this,void 0,void 0,(function*(){let t="openid";const n=yield this._config(),d=yield this._dataLayer.getSessionData(l);return n.scope&&n.scope.length>0&&(n.scope.includes("openid")||n.scope.push("openid"),t=n.scope.join(" ")),e.replace("{{token}}",d.access_token).replace("{{username}}",this.getAuthenticatedUserInfo(d.id_token).username).replace("{{scope}}",t).replace("{{clientID}}",n.clientID).replace("{{clientSecret}}",null!==(i=n.clientSecret)&&void 0!==i?i:"")}))}clearUserSessionData(e){return t(this,void 0,void 0,(function*(){yield this._dataLayer.removeTemporaryData(e),yield this._dataLayer.removeSessionData(e)}))}handleTokenResponse(e,l){return t(this,void 0,void 0,(function*(){if(200!==e.status||!e.ok)throw new X("JS-AUTH_HELPER-HTR-NE01",`Invalid response status received for token request (${e.statusText}).`,yield e.json());const i=yield e.json();if(i.created_at=(new Date).getTime(),(yield this._config()).validateIDToken)return this.validateIdToken(i.id_token).then((()=>t(this,void 0,void 0,(function*(){yield this._dataLayer.setSessionData(i,l);const e={accessToken:i.access_token,createdAt:i.created_at,expiresIn:i.expires_in,idToken:i.id_token,refreshToken:i.refresh_token,scope:i.scope,tokenType:i.token_type};return Promise.resolve(e)}))));{const e={accessToken:i.access_token,createdAt:i.created_at,expiresIn:i.expires_in,idToken:i.id_token,refreshToken:i.refresh_token,scope:i.scope,tokenType:i.token_type};return yield this._dataLayer.setSessionData(i,l),Promise.resolve(e)}}))}generatePKCEKey(e){var l;return t(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getTemporaryData(e),i=[];Object.keys(t).forEach((e=>{e.startsWith("pkce_code_verifier")&&i.push(e)}));const n=i.sort().pop();return`pkce_code_verifier#${parseInt(null!==(l=null==n?void 0:n.split("#")[1])&&void 0!==l?l:"-1")+1}`}))}}class W{constructor(e){this._cryptoUtils=e}getCodeVerifier(){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.generateRandomBytes(32))}getCodeChallenge(e){return this._cryptoUtils.base64URLEncode(this._cryptoUtils.hashSha256(e))}getJWKForTheIdToken(e,t){const l=JSON.parse(this._cryptoUtils.base64URLDecode(e));for(const e of t)if(l.kid===e.kid)return e;throw new X("JS-CRYPTO_UTIL-GJFTIT-IV01","kid not found.","Failed to find the 'kid' specified in the id_token. 'kid' found in the header : "+l.kid+", Expected values: "+t.map((e=>e.kid)).join(", "))}isValidIdToken(e,t,l,i,n,d,o){return this._cryptoUtils.verifyJwt(e,t,r,l,i,n,d,o).then((e=>e?Promise.resolve(!0):Promise.reject(new X("JS-CRYPTO_HELPER-IVIT-IV01","Invalid ID token.","ID token validation returned false"))))}decodeIDToken(e){try{const t=this._cryptoUtils.base64URLDecode(e.split(".")[1]);return JSON.parse(t)}catch(e){throw new X("JS-CRYPTO_UTIL-DIT-IV01","Decoding ID token failed.",e)}}}class C{constructor(e,l){this._cryptoUtils=l,this._cryptoHelper=new W(l),this._authenticationHelper=new V(e,this._cryptoHelper),this._dataLayer=e,this._config=()=>t(this,void 0,void 0,(function*(){return yield this._dataLayer.getConfigData()})),this._oidcProviderMetaData=()=>t(this,void 0,void 0,(function*(){return yield this._dataLayer.getOIDCProviderMetaData()}))}getAuthorizationURLParams(e,l){var i,n,d;return t(this,void 0,void 0,(function*(){const t=yield this._config(),o=new Map;o.set("response_type","code"),o.set("client_id",t.clientID);let c="openid";t.scope&&t.scope.length>0&&(t.scope.includes("openid")||t.scope.push("openid"),c=t.scope.join(" ")),o.set("scope",c),o.set("redirect_uri",t.signInRedirectURL),t.responseMode&&o.set("response_mode",t.responseMode);const a=yield this._authenticationHelper.generatePKCEKey(l);if(t.enablePKCE){const e=null===(i=this._cryptoHelper)||void 0===i?void 0:i.getCodeVerifier(),t=null===(n=this._cryptoHelper)||void 0===n?void 0:n.getCodeChallenge(e);yield this._dataLayer.setTemporaryDataParameter(a,e,l),o.set("code_challenge_method","S256"),o.set("code_challenge",t)}t.prompt&&o.set("prompt",t.prompt);const s=e;if(s)for(const[e,t]of Object.entries(s))""!=e&&""!=t&&"state"!==e&&o.set(e,t.toString());return o.set("state",y.generateStateParamForRequestCorrelation(a,s?null===(d=s.state)||void 0===d?void 0:d.toString():"")),o}))}getAuthorizationURL(e,l){return t(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getOIDCProviderMetaDataParameter("authorization_endpoint");if(!t||0===t.trim().length)throw new X("JS-AUTH_CORE-GAU-NF01","No authorization endpoint found.","No authorization endpoint was found in the OIDC provider meta data from the well-known endpoint or the authorization endpoint passed to the SDK is empty.");const i=new URL(t),n=yield this.getAuthorizationURLParams(e,l);for(const[e,t]of n.entries())i.searchParams.append(e,t);return i.toString()}))}requestAccessToken(e,l,i,n,d){return t(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).token_endpoint,o=yield this._config();if(!t||0===t.trim().length)throw new X("JS-AUTH_CORE-RAT1-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");l&&(yield this._dataLayer.setSessionDataParameter("session_state",l,n));const c=new URLSearchParams;c.set("client_id",o.clientID),o.clientSecret&&o.clientSecret.trim().length>0&&c.set("client_secret",o.clientSecret);const a=e;let s;c.set("code",a),c.set("grant_type","authorization_code"),c.set("redirect_uri",o.signInRedirectURL),(null==d?void 0:d.params)&&Object.entries(d.params).forEach((([e,t])=>{c.append(e,t)})),o.enablePKCE&&(c.set("code_verifier",`${yield this._dataLayer.getTemporaryDataParameter(y.extractPKCEKeyFromStateParam(i),n)}`),yield this._dataLayer.removeTemporaryDataParameter(y.extractPKCEKeyFromStateParam(i),n));try{s=yield fetch(t,{body:c,credentials:o.sendCookiesInRequests?g.Include:g.SameOrigin,headers:new Headers(y.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new X("JS-AUTH_CORE-RAT1-NE02","Requesting access token failed",null!=t?t:"The request to get the access token from the server failed.")}if(!s.ok)throw new X("JS-AUTH_CORE-RAT1-HE03",`Requesting access token failed with ${s.statusText}`,yield s.json());return yield this._authenticationHelper.handleTokenResponse(s,n)}))}refreshAccessToken(e){return t(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).token_endpoint,l=yield this._config(),i=yield this._dataLayer.getSessionData(e);if(!i.refresh_token)throw new X("JS-AUTH_CORE-RAT2-NF01","No refresh token found.","There was no refresh token found. Asgardeo doesn't return a refresh token if the refresh token grant is not enabled.");if(!t||0===t.trim().length)throw new X("JS-AUTH_CORE-RAT2-NF02","No refresh token endpoint found.","No refresh token endpoint was in the OIDC provider meta data returned by the well-known endpoint or the refresh token endpoint passed to the SDK is empty.");const n=[];let d;n.push(`client_id=${l.clientID}`),n.push(`refresh_token=${i.refresh_token}`),n.push("grant_type=refresh_token"),l.clientSecret&&l.clientSecret.trim().length>0&&n.push(`client_secret=${l.clientSecret}`);try{d=yield fetch(t,{body:n.join("&"),credentials:l.sendCookiesInRequests?g.Include:g.SameOrigin,headers:new Headers(y.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new X("JS-AUTH_CORE-RAT2-NR03","Refresh access token request failed.",null!=t?t:"The request to refresh the access token failed.")}if(!d.ok)throw new X("JS-AUTH_CORE-RAT2-HE04",`Refreshing access token failed with ${d.statusText}`,yield d.json());return this._authenticationHelper.handleTokenResponse(d,e)}))}revokeAccessToken(e){return t(this,void 0,void 0,(function*(){const t=(yield this._oidcProviderMetaData()).revocation_endpoint,l=yield this._config();if(!t||0===t.trim().length)throw new X("JS-AUTH_CORE-RAT3-NF01","No revoke access token endpoint found.","No revoke access token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the revoke access token endpoint passed to the SDK is empty.");const i=[];let n;i.push(`client_id=${l.clientID}`),i.push(`token=${(yield this._dataLayer.getSessionData(e)).access_token}`),i.push("token_type_hint=access_token");try{n=yield fetch(t,{body:i.join("&"),credentials:l.sendCookiesInRequests?g.Include:g.SameOrigin,headers:new Headers(y.getTokenRequestHeaders()),method:"POST"})}catch(t){throw new X("JS-AUTH_CORE-RAT3-NE02","The request to revoke access token failed.",null!=t?t:"The request sent to revoke the access token failed.")}if(200!==n.status||!n.ok)throw new X("JS-AUTH_CORE-RAT3-HE03",`Invalid response status received for revoke access token request (${n.statusText}).`,yield n.json());return this._authenticationHelper.clearUserSessionData(e),Promise.resolve(n)}))}requestCustomGrant(e,l){return t(this,void 0,void 0,(function*(){const i=yield this._oidcProviderMetaData(),n=yield this._config();let d;if(d=e.tokenEndpoint&&0!==e.tokenEndpoint.trim().length?e.tokenEndpoint:i.token_endpoint,!d||0===d.trim().length)throw new X("JS-AUTH_CORE-RCG-NF01","Token endpoint not found.","No token endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the token endpoint passed to the SDK is empty.");const o=yield Promise.all(Object.entries(e.data).map((([e,i])=>t(this,void 0,void 0,(function*(){const t=yield this._authenticationHelper.replaceCustomGrantTemplateTags(i,l);return`${e}=${t}`})))));let c=Object.assign({},y.getTokenRequestHeaders());e.attachToken&&(c=Object.assign(Object.assign({},c),{Authorization:`Bearer ${(yield this._dataLayer.getSessionData(l)).access_token}`}));const a={body:o.join("&"),credentials:n.sendCookiesInRequests?g.Include:g.SameOrigin,headers:new Headers(c),method:"POST"};let s;try{s=yield fetch(d,a)}catch(e){throw new X("JS-AUTH_CORE-RCG-NE02","The custom grant request failed.",null!=e?e:"The request sent to get the custom grant failed.")}if(200!==s.status||!s.ok)throw new X("JS-AUTH_CORE-RCG-HE03",`Invalid response status received for the custom grant request. (${s.statusText})`,yield s.json());return e.returnsSession?this._authenticationHelper.handleTokenResponse(s,l):Promise.resolve(yield s.json())}))}getBasicUserInfo(e){return t(this,void 0,void 0,(function*(){const t=yield this._dataLayer.getSessionData(e),l=this._authenticationHelper.getAuthenticatedUserInfo(null==t?void 0:t.id_token);let i={allowedScopes:t.scope,sessionState:t.session_state};return Object.keys(l).forEach((e=>{void 0!==l[e]&&""!==l[e]&&null!==l[e]||delete l[e]})),i=Object.assign(Object.assign({},i),l),i}))}getDecodedIDToken(e){return t(this,void 0,void 0,(function*(){const t=(yield this._dataLayer.getSessionData(e)).id_token;return this._cryptoHelper.decodeIDToken(t)}))}getCryptoHelper(){return t(this,void 0,void 0,(function*(){return this._cryptoHelper}))}getIDToken(e){return t(this,void 0,void 0,(function*(){return(yield this._dataLayer.getSessionData(e)).id_token}))}getOIDCProviderMetaData(e){return t(this,void 0,void 0,(function*(){const t=yield this._config();if(!e&&(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated")))return Promise.resolve();const l=t.wellKnownEndpoint;if(l){let e;try{if(e=yield fetch(l),200!==e.status||!e.ok)throw new Error}catch(t){throw new X("JS-AUTH_CORE-GOPMD-HE01","Invalid well-known response","The well known endpoint response has been failed with an error.")}return yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpoints(yield e.json())),yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}if(t.baseUrl){try{yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsByBaseURL())}catch(t){throw new X("JS-AUTH_CORE-GOPMD-IV02","Resolving endpoints failed.",null!=t?t:"Resolving endpoints by base url failed.")}return yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}return yield this._dataLayer.setOIDCProviderMetaData(yield this._authenticationHelper.resolveEndpointsExplicitly()),yield this._dataLayer.setTemporaryDataParameter("op_config_initiated",!0),Promise.resolve()}))}getOIDCServiceEndpoints(){var e,l,i,n,d,o,c,a,s,Z;return t(this,void 0,void 0,(function*(){const t=yield this._oidcProviderMetaData();return{authorizationEndpoint:null!==(e=t.authorization_endpoint)&&void 0!==e?e:"",checkSessionIframe:null!==(l=t.check_session_iframe)&&void 0!==l?l:"",endSessionEndpoint:null!==(i=t.end_session_endpoint)&&void 0!==i?i:"",introspectionEndpoint:null!==(n=t.introspection_endpoint)&&void 0!==n?n:"",issuer:null!==(d=t.issuer)&&void 0!==d?d:"",jwksUri:null!==(o=t.jwks_uri)&&void 0!==o?o:"",registrationEndpoint:null!==(c=t.registration_endpoint)&&void 0!==c?c:"",revocationEndpoint:null!==(a=t.revocation_endpoint)&&void 0!==a?a:"",tokenEndpoint:null!==(s=t.token_endpoint)&&void 0!==s?s:"",userinfoEndpoint:null!==(Z=t.userinfo_endpoint)&&void 0!==Z?Z:""}}))}getSignOutURL(e){var l,i,n;return t(this,void 0,void 0,(function*(){const t=null===(l=yield this._oidcProviderMetaData())||void 0===l?void 0:l.end_session_endpoint,d=yield this._config();if(!t||0===t.trim().length)throw new X("JS-AUTH_CORE-GSOU-NF01","Sign-out endpoint not found.","No sign-out endpoint was found in the OIDC provider meta data returned by the well-known endpoint or the sign-out endpoint passed to the SDK is empty.");const o=null!==(i=null==d?void 0:d.signOutRedirectURL)&&void 0!==i?i:null==d?void 0:d.signInRedirectURL;if(!o||0===o.trim().length)throw new X("JS-AUTH_CORE-GSOU-NF03","No sign-out redirect URL found.","The sign-out redirect URL cannot be found or the URL passed to the SDK is empty. No sign-in redirect URL has been found either. ");const c=new URLSearchParams;if(c.set("post_logout_redirect_uri",o),d.sendIdTokenInLogoutRequest){const t=null===(n=yield this._dataLayer.getSessionData(e))||void 0===n?void 0:n.id_token;if(!t||0===t.trim().length)throw new X("JS-AUTH_CORE-GSOU-NF02","ID token not found.","No ID token could be found. Either the session information is lost or you have not signed in.");c.set("id_token_hint",t)}else c.set("client_id",d.clientID);return c.set("state","sign_out_success"),`${t}?${c.toString()}`}))}clearUserSessionData(e){return t(this,void 0,void 0,(function*(){yield this._authenticationHelper.clearUserSessionData(e)}))}getAccessToken(e){var l;return t(this,void 0,void 0,(function*(){return null===(l=yield this._dataLayer.getSessionData(e))||void 0===l?void 0:l.access_token}))}getCreatedAt(e){var l;return t(this,void 0,void 0,(function*(){return null===(l=yield this._dataLayer.getSessionData(e))||void 0===l?void 0:l.created_at}))}getExpiresIn(e){var l;return t(this,void 0,void 0,(function*(){return null===(l=yield this._dataLayer.getSessionData(e))||void 0===l?void 0:l.expires_in}))}isAuthenticated(e){return t(this,void 0,void 0,(function*(){const t=Boolean(yield this.getAccessToken(e)),l=yield this.getCreatedAt(e),i=yield this.getExpiresIn(e);if(!i)return!1;const n=1e3*parseInt(i),d=(new Date).getTime();return t&&l+n>d}))}getPKCECode(e,l){return t(this,void 0,void 0,(function*(){return yield this._dataLayer.getTemporaryDataParameter(y.extractPKCEKeyFromStateParam(e),l)}))}setPKCECode(e,l,i){return t(this,void 0,void 0,(function*(){return yield this._dataLayer.setTemporaryDataParameter(y.extractPKCEKeyFromStateParam(l),e,i)}))}updateConfig(e){return t(this,void 0,void 0,(function*(){yield this._dataLayer.setConfigData(e),yield this.getOIDCProviderMetaData(!0)}))}}const R="asgardeo-session-active";class S{constructor(e,t){this._id=e,this._store=t}setDataInBulk(e,l){var i;return t(this,void 0,void 0,(function*(){const t=null!==(i=yield this._store.getData(e))&&void 0!==i?i:null,n=t&&JSON.parse(t),d=Object.assign(Object.assign({},n),l),o=JSON.stringify(d);yield this._store.setData(e,o)}))}setValue(e,l,i){var n;return t(this,void 0,void 0,(function*(){const t=null!==(n=yield this._store.getData(e))&&void 0!==n?n:null,d=t&&JSON.parse(t),o=Object.assign(Object.assign({},d),{[l]:i}),c=JSON.stringify(o);yield this._store.setData(e,c)}))}removeValue(e,l){var i;return t(this,void 0,void 0,(function*(){const t=null!==(i=yield this._store.getData(e))&&void 0!==i?i:null,n=t&&JSON.parse(t),d=Object.assign({},n);delete d[l];const o=JSON.stringify(d);yield this._store.setData(e,o)}))}_resolveKey(e,t){return t?`${e}-${this._id}-${t}`:`${e}-${this._id}`}isLocalStorageAvailable(){try{const e="__ASGARDEO_AUTH_CORE_LOCAL_STORAGE_TEST__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return!1}}setConfigData(e){return t(this,void 0,void 0,(function*(){yield this.setDataInBulk(this._resolveKey(a.ConfigData),e)}))}setOIDCProviderMetaData(e){return t(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(a.OIDCProviderMetaData),e)}))}setTemporaryData(e,l){return t(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(a.TemporaryData,l),e)}))}setSessionData(e,l){return t(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(a.SessionData,l),e)}))}setCustomData(e,l,i){return t(this,void 0,void 0,(function*(){this.setDataInBulk(this._resolveKey(e,i),l)}))}getConfigData(){var e;return t(this,void 0,void 0,(function*(){return JSON.parse(null!==(e=yield this._store.getData(this._resolveKey(a.ConfigData)))&&void 0!==e?e:null)}))}getOIDCProviderMetaData(){var e;return t(this,void 0,void 0,(function*(){return JSON.parse(null!==(e=yield this._store.getData(this._resolveKey(a.OIDCProviderMetaData)))&&void 0!==e?e:null)}))}getTemporaryData(e){var l;return t(this,void 0,void 0,(function*(){return JSON.parse(null!==(l=yield this._store.getData(this._resolveKey(a.TemporaryData,e)))&&void 0!==l?l:null)}))}getSessionData(e){var l;return t(this,void 0,void 0,(function*(){return JSON.parse(null!==(l=yield this._store.getData(this._resolveKey(a.SessionData,e)))&&void 0!==l?l:null)}))}getCustomData(e,l){var i;return t(this,void 0,void 0,(function*(){return JSON.parse(null!==(i=yield this._store.getData(this._resolveKey(e,l)))&&void 0!==i?i:null)}))}setSessionStatus(e){this.isLocalStorageAvailable()&&localStorage.setItem("asgardeo-session-active",e)}getSessionStatus(){var e;return this.isLocalStorageAvailable()&&null!==(e=localStorage.getItem("asgardeo-session-active"))&&void 0!==e?e:""}removeSessionStatus(){this.isLocalStorageAvailable()&&localStorage.removeItem("asgardeo-session-active")}removeConfigData(){return t(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(a.ConfigData))}))}removeOIDCProviderMetaData(){return t(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(a.OIDCProviderMetaData))}))}removeTemporaryData(e){return t(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(a.TemporaryData,e))}))}removeSessionData(e){return t(this,void 0,void 0,(function*(){yield this._store.removeData(this._resolveKey(a.SessionData,e))}))}getConfigDataParameter(e){return t(this,void 0,void 0,(function*(){const t=yield this._store.getData(this._resolveKey(a.ConfigData));return t&&JSON.parse(t)[e]}))}getOIDCProviderMetaDataParameter(e){return t(this,void 0,void 0,(function*(){const t=yield this._store.getData(this._resolveKey(a.OIDCProviderMetaData));return t&&JSON.parse(t)[e]}))}getTemporaryDataParameter(e,l){return t(this,void 0,void 0,(function*(){const t=yield this._store.getData(this._resolveKey(a.TemporaryData,l));return t&&JSON.parse(t)[e]}))}getSessionDataParameter(e,l){return t(this,void 0,void 0,(function*(){const t=yield this._store.getData(this._resolveKey(a.SessionData,l));return t&&JSON.parse(t)[e]}))}setConfigDataParameter(e,l){return t(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(a.ConfigData),e,l)}))}setOIDCProviderMetaDataParameter(e,l){return t(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(a.OIDCProviderMetaData),e,l)}))}setTemporaryDataParameter(e,l,i){return t(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(a.TemporaryData,i),e,l)}))}setSessionDataParameter(e,l,i){return t(this,void 0,void 0,(function*(){yield this.setValue(this._resolveKey(a.SessionData,i),e,l)}))}removeConfigDataParameter(e){return t(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(a.ConfigData),e)}))}removeOIDCProviderMetaDataParameter(e){return t(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(a.OIDCProviderMetaData),e)}))}removeTemporaryDataParameter(e,l){return t(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(a.TemporaryData,l),e)}))}removeSessionDataParameter(e,l){return t(this,void 0,void 0,(function*(){yield this.removeValue(this._resolveKey(a.SessionData,l),e)}))}}const Y={clockTolerance:300,enablePKCE:!0,responseMode:l.query,scope:["openid"],sendCookiesInRequests:!0,validateIDToken:!0,validateIDTokenIssuer:!0};class v{
/**
     * This is the constructor method that returns an instance of the .
     *
     * @param store - The store object.
     *
     * @example
     * ```
     * const _store: Store = new DataStore();
     * const auth = new AsgardeoAuthClient<CustomClientConfig>(_store);
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#constructor}
     *
     * @preserve
     */
constructor(){}
/**
     *
     * This method initializes the SDK with the config data.
     *
     * @param config - The config object to initialize with.
     *
     * @example
     * const config = \{
     *     signInRedirectURL: "http://localhost:3000/sign-in",
     *     clientID: "client ID",
     *     baseUrl: "https://localhost:9443"
     * \}
     *
     * await auth.initialize(config);
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#initialize}
     *
     * @preserve
     */initialize(e,l,i,n){var d,o,c;return t(this,void 0,void 0,(function*(){const t=e.clientID;v._instanceID?v._instanceID+=1:v._instanceID=0,n&&(v._instanceID=n),this._dataLayer=new S(t?`instance_${v._instanceID}-${t}`:`instance_${v._instanceID}`,l),this._authenticationCore=new C(this._dataLayer,i),v._authenticationCore=new C(this._dataLayer,i),yield this._dataLayer.setConfigData(Object.assign(Object.assign(Object.assign({},Y),e),{scope:[...null!==(d=Y.scope)&&void 0!==d?d:[],...null!==(c=null===(o=e.scope)||void 0===o?void 0:o.filter((e=>{var t;return!(null===(t=null==Y?void 0:Y.scope)||void 0===t?void 0:t.includes(e))})))&&void 0!==c?c:[]]}))}))}
/**
     * This method returns the `DataLayer` object that allows you to access authentication data.
     *
     * @returns - The `DataLayer` object.
     *
     * @example
     * ```
     * const data = auth.getDataLayer();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getDataLayer}
     *
     * @preserve
     */getDataLayer(){return this._dataLayer}
/**
     * This method returns the `instanceID` variable of the given instance.
     *
     * @returns - The `instanceID` number.
     *
     * @example
     * ```
     * const instanceId = auth.getInstanceID();
     * ```
     *
     * @preserve
     */getInstanceID(){return v._instanceID}
/**
   * This is an async method that returns a Promise that resolves with the authorization URL parameters.
   *
   * @param config - (Optional) A config object to force initialization and pass
   * custom path parameters such as the `fidp` parameter.
   * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
   * scenarios where each user should be uniquely identified.
   *
   * @returns - A promise that resolves with the authorization URL parameters.
   *
   * @example
   * ```
   * auth.getAuthorizationURLParams().then((params)=>{
   *  // console.log(params);
   * }).catch((error)=>{
   *  // console.error(error);
   * });
   * ```
   *
   * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAuthorizationURLParams}
   *
   * @preserve
   */getAuthorizationURLParams(e,l){return t(this,void 0,void 0,(function*(){const t=Object.assign({},e);return null==t||delete t.forceInit,(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.getAuthorizationURLParams(t,l):this._authenticationCore.getOIDCProviderMetaData(null==e?void 0:e.forceInit).then((()=>this._authenticationCore.getAuthorizationURLParams(t,l)))}))}
/**
     * This is an async method that returns a Promise that resolves with the authorization URL.
     *
     * @param config - (Optional) A config object to force initialization and pass
     * custom path parameters such as the fidp parameter.
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A promise that resolves with the authorization URL.
     *
     * @example
     * ```
     * auth.getAuthorizationURL().then((url)=>{
     *  // console.log(url);
     * }).catch((error)=>{
     *  // console.error(error);
     * });
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAuthorizationURL}
     *
     * @preserve
     */getAuthorizationURL(e,l){return t(this,void 0,void 0,(function*(){const t=Object.assign({},e);return null==t||delete t.forceInit,(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.getAuthorizationURL(t,l):this._authenticationCore.getOIDCProviderMetaData(null==e?void 0:e.forceInit).then((()=>this._authenticationCore.getAuthorizationURL(t,l)))}))}
/**
     * This is an async method that sends a request to obtain the access token and returns a Promise
     * that resolves with the token and other relevant data.
     *
     * @param authorizationCode - The authorization code.
     * @param sessionState - The session state.
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with the token response.
     *
     * @example
     * ```
     * auth.requestAccessToken(authCode, sessionState).then((token)=>{
     *  // console.log(token);
     * }).catch((error)=>{
     *  // console.error(error);
     * });
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#requestAccessToken}
     *
     *
     * @preserve
     */requestAccessToken(e,l,i,n,d){return t(this,void 0,void 0,(function*(){return(yield this._dataLayer.getTemporaryDataParameter("op_config_initiated"))?this._authenticationCore.requestAccessToken(e,l,i,n,d):this._authenticationCore.getOIDCProviderMetaData(!1).then((()=>this._authenticationCore.requestAccessToken(e,l,i,n,d)))}))}
/**
     * This method returns the sign-out URL.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * **This doesn't clear the authentication data.**
     *
     * @returns - A Promise that resolves with the sign-out URL.
     *
     * @example
     * ```
     * const signOutUrl = await auth.getSignOutURL();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getSignOutURL}
     *
     * @preserve
     */getSignOutURL(e){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getSignOutURL(e)}))}
/**
     * This method returns OIDC service endpoints that are fetched from the `.well-known` endpoint.
     *
     * @returns - A Promise that resolves with an object containing the OIDC service endpoints.
     *
     * @example
     * ```
     * const endpoints = await auth.getOIDCServiceEndpoints();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getOIDCServiceEndpoints}
     *
     * @preserve
     */getOIDCServiceEndpoints(){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getOIDCServiceEndpoints()}))}
/**
     * This method decodes the payload of the ID token and returns it.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with the decoded ID token payload.
     *
     * @example
     * ```
     * const decodedIdToken = await auth.getDecodedIDToken();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getDecodedIDToken}
     *
     * @preserve
     */getDecodedIDToken(e){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getDecodedIDToken(e)}))}
/**
     * This method returns the ID token.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with the ID token.
     *
     * @example
     * ```
     * const idToken = await auth.getIDToken();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIDToken}
     *
     * @preserve
     */getIDToken(e){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getIDToken(e)}))}
/**
     * This method returns the basic user information obtained from the ID token.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with an object containing the basic user information.
     *
     * @example
     * ```
     * const userInfo = await auth.getBasicUserInfo();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getBasicUserInfo}
     *
     * @preserve
     */getBasicUserInfo(e){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getBasicUserInfo(e)}))}
/**
     * This method returns the crypto helper object.
     *
     * @returns - A Promise that resolves with a CryptoHelper object.
     *
     * @example
     * ```
     * const cryptoHelper = await auth.CryptoHelper();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getCryptoHelper}
     *
     * @preserve
     */getCryptoHelper(){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getCryptoHelper()}))}
/**
     * This method revokes the access token.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * **This method also clears the authentication data.**
     *
     * @returns - A Promise that returns the response of the revoke-access-token request.
     *
     * @example
     * ```
     * auth.revokeAccessToken().then((response)=>{
     *  // console.log(response);
     * }).catch((error)=>{
     *  // console.error(error);
     * });
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#revokeAccessToken}
     *
     * @preserve
     */revokeAccessToken(e){return this._authenticationCore.revokeAccessToken(e)}
/**
     * This method refreshes the access token and returns a Promise that resolves with the new access
     * token and other relevant data.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with the token response.
     *
     * @example
     * ```
     * auth.refreshAccessToken().then((response)=>{
     *  // console.log(response);
     * }).catch((error)=>{
     *  // console.error(error);
     * });
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#refreshAccessToken}
     *
     * @preserve
     */refreshAccessToken(e){return this._authenticationCore.refreshAccessToken(e)}
/**
     * This method returns the access token.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with the access token.
     *
     * @example
     * ```
     * const accessToken = await auth.getAccessToken();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getAccessToken}
     *
     * @preserve
     */getAccessToken(e){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getAccessToken(e)}))}
/**
     * This method sends a custom-grant request and returns a Promise that resolves with the response
     * depending on the config passed.
     *
     * @param config - A config object containing the custom grant configurations.
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with the response depending
     * on your configurations.
     *
     * @example
     * ```
     * const config = {
     *   attachToken: false,
     *   data: {
     *       client_id: "{{clientID}}",
     *       grant_type: "account_switch",
     *       scope: "{{scope}}",
     *       token: "{{token}}",
     *   },
     *   id: "account-switch",
     *   returnResponse: true,
     *   returnsSession: true,
     *   signInRequired: true
     * }
     *
     * auth.requestCustomGrant(config).then((response)=>{
     *  // console.log(response);
     * }).catch((error)=>{
     *  // console.error(error);
     * });
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#requestCustomGrant}
     *
     * @preserve
     */requestCustomGrant(e,t){return this._authenticationCore.requestCustomGrant(e,t)}
/**
     * This method returns if the user is authenticated or not.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @returns - A Promise that resolves with `true` if the user is authenticated, `false` otherwise.
     *
     * @example
     * ```
     * await auth.isAuthenticated();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#isAuthenticated}
     *
     * @preserve
     */isAuthenticated(e){return t(this,void 0,void 0,(function*(){return this._authenticationCore.isAuthenticated(e)}))}
/**
     * This method returns the PKCE code generated during the generation of the authentication URL.
     *
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     * @param state - The state parameter that was passed in the authentication URL.
     *
     * @returns - A Promise that resolves with the PKCE code.
     *
     * @example
     * ```
     * const pkce = await getPKCECode();
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getPKCECode}
     *
     * @preserve
     */getPKCECode(e,l){return t(this,void 0,void 0,(function*(){return this._authenticationCore.getPKCECode(e,l)}))}
/**
     * This method sets the PKCE code to the data store.
     *
     * @param pkce - The PKCE code.
     * @param state - The state parameter that was passed in the authentication URL.
     * @param userID - (Optional) A unique ID of the user to be authenticated. This is useful in multi-user
     * scenarios where each user should be uniquely identified.
     *
     * @example
     * ```
     * await auth.setPKCECode("pkce_code")
     * ```
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#setPKCECode}
     *
     * @preserve
     */setPKCECode(e,l,i){return t(this,void 0,void 0,(function*(){yield this._authenticationCore.setPKCECode(e,l,i)}))}
/**
     * This method returns if the sign-out is successful or not.
     *
     * @param signOutRedirectUrl - The URL to which the user has been redirected to after signing-out.
     *
     * **The server appends path parameters to the `signOutRedirectURL` and these path parameters
     *  are required for this method to function.**
     *
     * @returns - `true` if successful, `false` otherwise.
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#isSignOutSuccessful}
     *
     * @preserve
     */static isSignOutSuccessful(e){const t=new URL(e),l=t.searchParams.get("state"),i=Boolean(t.searchParams.get("error"));return!!l&&"sign_out_success"===l&&!i}
/**
     * This method returns if the sign-out has failed or not.
     *
     * @param signOutRedirectUrl - The URL to which the user has been redirected to after signing-out.
     *
     * **The server appends path parameters to the `signOutRedirectURL` and these path parameters
     *  are required for this method to function.**
     *
     * @returns - `true` if successful, `false` otherwise.
     *
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#didSignOutFail}
     *
     * @preserve
     */static didSignOutFail(e){const t=new URL(e),l=t.searchParams.get("state"),i=Boolean(t.searchParams.get("error"));return!!l&&"sign_out_success"===l&&i}
/**
     * This method updates the configuration that was passed into the constructor when instantiating this class.
     *
     * @param config - A config object to update the SDK configurations with.
     *
     * @example
     * ```
     * const config = {
     *     signInRedirectURL: "http://localhost:3000/sign-in",
     *     clientID: "client ID",
     *     baseUrl: "https://localhost:9443"
     * }
     *
     * await auth.updateConfig(config);
     * ```
     * {@link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#updateConfig}
     *
     * @preserve
     */updateConfig(e){return t(this,void 0,void 0,(function*(){yield this._authenticationCore.updateConfig(e)}))}static clearUserSessionData(e){return t(this,void 0,void 0,(function*(){yield this._authenticationCore.clearUserSessionData(e)}))}}function K(e,t,l){var i=void 0===t?null:t,n=function(e,t){var l=atob(e);if(t){for(var i=new Uint8Array(l.length),n=0,d=l.length;n<d;++n)i[n]=l.charCodeAt(n);return String.fromCharCode.apply(null,new Uint16Array(i.buffer))}return l}(e,void 0!==l&&l),d=n.indexOf("\n",10)+1,o=n.substring(d)+(i?"//# sourceMappingURL="+i:""),c=new Blob([o],{type:"application/javascript"});return URL.createObjectURL(c)}var N,J,k,H,f=(N="",J=null,k=!1,function(e){return H=H||K(N,J,k),new Worker(H,e)});var L;!function(e){e.LocalStorage="localStorage",e.SessionStorage="sessionStorage",e.WebWorker="webWorker",e.BrowserMemory="browserMemory"}(L||(L={}));const U="token_request_config";var T;!function(e){e.SignIn="sign-in",e.SignOut="sign-out",e.Initialize="initialize",e.HttpRequestStart="http-request-start",e.HttpRequestFinish="http-request-finish",e.HttpRequestError="http-request-error",e.HttpRequestSuccess="http-request-success",e.RevokeAccessToken="revoke-access-token",e.CustomGrant="custom-grant",e.SignOutFailed="sign-out-failed"}(T||(T={}));const F="Y2hlY2tTZXNzaW9u";class B{constructor(){}static generateSuccessMessage(e){return{blob:(null==e?void 0:e.data)instanceof Blob?null==e?void 0:e.data:null,data:JSON.stringify(null!=e?e:""),success:!0}}static generateFailureMessage(e){return(null==e?void 0:e.toJSON)&&delete e.toJSON,{error:JSON.stringify(null!=e?e:""),success:!1}}}class A{constructor(){}static removeAuthorizationCode(){const e=location.href;history.pushState({},document.title,e.replace(/\?code=.*$/,""))}static getPKCE(e){var t;return null!==(t=sessionStorage.getItem(e))&&void 0!==t?t:""}static setPKCE(e,t){sessionStorage.setItem(e,t)}static setSignOutURL(e,t,l){sessionStorage.setItem(`${m}-instance_${l}-${t}`,e)}static getSignOutURL(e,t){var l;return null!==(l=sessionStorage.getItem(`${m}-instance_${t}-${e}`))&&void 0!==l?l:""}static removePKCE(e){sessionStorage.removeItem(e)}static canContinueSignIn(e,t){return!(e&&!A.hasErrorInURL()&&!A.hasAuthSearchParamsInURL()&&!t)}static isInitializedSilentSignIn(){return A.isSilentStatePresentInURL()}static wasSignInCalled(){return!(!A.hasErrorInURL()&&!A.hasAuthSearchParamsInURL()||this.isSilentStatePresentInURL())}static wasSilentSignInCalled(){const e=sessionStorage.getItem("initialized-silent-sign-in"),t=e?JSON.parse(e):null;return Boolean(t)}static isSignOutSuccessful(){return e(this,void 0,void 0,(function*(){if(v.isSignOutSuccessful(window.location.href)){const e=window.location.href.split("?")[0];return history.pushState({},document.title,e),yield v.clearUserSessionData(),!0}return!1}))}static didSignOutFail(){if(v.didSignOutFail(window.location.href)){const e=new URL(window.location.href),t=e.searchParams.get("error"),l=e.searchParams.get("error_description"),i=window.location.href.split("?")[0];return history.pushState({},document.title,i),{description:null!=l?l:"",error:null!=t?t:""}}return!1}static isSilentStatePresentInURL(){var e;const t=new URL(window.location.href).searchParams.get("state");return null!==(e=null==t?void 0:t.includes("sign-in-silently"))&&void 0!==e&&e}static hasAuthSearchParamsInURL(e=window.location.search){return/[?&]code=[^&]+/.test(e)}static hasErrorInURL(e=window.location.href){const t=new URL(e);return!!t.searchParams.get("error")&&t.searchParams.get("state")!==I}static canSendPromptNoneRequest(){const e=sessionStorage.getItem("promptNoneRequestSent");return!(e?JSON.parse(e):null)}static setPromptNoneRequestSent(e){sessionStorage.setItem("promptNoneRequestSent",JSON.stringify(e))}static waitTillPageRedirect(t){return e(this,void 0,void 0,(function*(){const e=null!=t?t:3e3;yield new Promise((t=>setTimeout(t,1e3*e)))}))}}A.until=(e,t=500)=>{const l=i=>e()?i():setTimeout((()=>l(i)),t);return new Promise(l)};class z{constructor(e,t){this._authenticationClient=e,this._dataLayer=this._authenticationClient.getDataLayer(),this._spaHelper=t,this._instanceID=this._authenticationClient.getInstanceID(),this._isTokenRefreshing=!1}enableHttpHandler(e){(null==e?void 0:e.enableHandler)&&e.enableHandler()}disableHttpHandler(e){(null==e?void 0:e.disableHandler)&&e.disableHandler()}initializeSessionManger(e,t,l,i,n){var d,o,c;n.initialize(e.clientID,null!==(d=t.checkSessionIframe)&&void 0!==d?d:"",l,null!==(o=e.checkSessionInterval)&&void 0!==o?o:3,null!==(c=e.sessionRefreshInterval)&&void 0!==c?c:300,e.signInRedirectURL,i)}requestCustomGrant(t,l){var i,n,d;return e(this,void 0,void 0,(function*(){let o=!0,c=!1;if(null==t?void 0:t.tokenEndpoint){o=!1;for(const e of[...null!==(n=null===(i=yield this._dataLayer.getConfigData())||void 0===i?void 0:i.resourceServerURLs)&&void 0!==n?n:[],t.baseUrl])if(e&&(null===(d=t.tokenEndpoint)||void 0===d?void 0:d.startsWith(e))){c=!0;break}}return t.shouldReplayAfterRefresh&&this._dataLayer.setTemporaryDataParameter("custom_grant_config",JSON.stringify(t)),o||c?this._authenticationClient.requestCustomGrant(t).then((i=>e(this,void 0,void 0,(function*(){return l&&"function"==typeof l&&l(t),t.returnsSession?(this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()):i})))).catch((e=>Promise.reject(e))):Promise.reject(new X("SPA-MAIN_THREAD_CLIENT-RCG-IV01","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified token endpoint in this request cannot be found among the `resourceServerURLs`"))}))}getCustomGrantConfigData(){return e(this,void 0,void 0,(function*(){const e=yield this._dataLayer.getTemporaryDataParameter("custom_grant_config");return e?JSON.parse(e):null}))}refreshAccessToken(t){return e(this,void 0,void 0,(function*(){try{yield this._authenticationClient.refreshAccessToken();const e=yield this.getCustomGrantConfigData();return e&&(yield this.requestCustomGrant(e,t)),this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()}catch(e){const t={type:"refresh-access-token-error"};return window.postMessage(t),Promise.reject(e)}}))}retryFailedRequests(t){return e(this,void 0,void 0,(function*(){const e=t.httpClient,l=t.requestConfig,i=t.isHttpHandlerEnabled,n=t.httpErrorCallback,d=t.httpFinishCallback;yield A.until((()=>!this._isTokenRefreshing));try{const t=yield e.request(l);return Promise.resolve(t)}catch(e){return i&&("function"==typeof n&&(yield n(e)),"function"==typeof d&&d()),Promise.reject(e)}}))}httpRequest(t,l,i,n,d,o){var c,a;return e(this,void 0,void 0,(function*(){let s=!1;const Z=yield this._dataLayer.getConfigData();for(const e of[...null!==(c=yield null==Z?void 0:Z.resourceServerURLs)&&void 0!==c?c:[],Z.baseUrl])if(e&&(null===(a=null==l?void 0:l.url)||void 0===a?void 0:a.startsWith(e))){s=!0;break}return s?t.request(l).then((e=>Promise.resolve(e))).catch((c=>e(this,void 0,void 0,(function*(){var e,a,s;if(401===(null===(e=null==c?void 0:c.response)||void 0===e?void 0:e.status)||!(null==c?void 0:c.response)){if(this._isTokenRefreshing)return this.retryFailedRequests({enableRetrievingSignOutURLFromSession:o,httpClient:t,httpErrorCallback:n,httpFinishCallback:d,isHttpHandlerEnabled:i,requestConfig:l});let e;this._isTokenRefreshing=!0;try{e=yield this.refreshAccessToken(o),this._isTokenRefreshing=!1}catch(e){throw this._isTokenRefreshing=!1,i&&("function"==typeof n&&(yield n(Object.assign(Object.assign({},c),{code:"Access token is invalid"}))),"function"==typeof d&&d()),new X("SPA-AUTH_HELPER-HR-SE01",null!==(a=null==e?void 0:e.name)&&void 0!==a?a:"Refresh token request failed.",null!==(s=null==e?void 0:e.message)&&void 0!==s?s:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(e)try{const e=yield t.request(l);return Promise.resolve(e)}catch(e){return i&&("function"==typeof n&&(yield n(e)),"function"==typeof d&&d()),Promise.reject(e)}}return i&&("function"==typeof n&&(yield n(c)),"function"==typeof d&&d()),Promise.reject(c)})))):Promise.reject(new X("SPA-AUTH_HELPER-HR-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`"))}))}httpRequestAll(t,l,i,n,d){var o,c,a;return e(this,void 0,void 0,(function*(){let s=!0;const Z=yield this._dataLayer.getConfigData();for(const e of t){let t=!1;for(const l of[...null!==(c=null===(o=yield Z)||void 0===o?void 0:o.resourceServerURLs)&&void 0!==c?c:[],Z.baseUrl])if(l&&(null===(a=e.url)||void 0===a?void 0:a.startsWith(l))){t=!0;break}if(!t){s=!1;break}}const u=[];if(s)return t.forEach((e=>{u.push(l.request(e))})),(null==l?void 0:l.all)&&l.all(u).then((e=>Promise.resolve(e))).catch((t=>e(this,void 0,void 0,(function*(){var o,c,a;if(401===(null===(o=null==t?void 0:t.response)||void 0===o?void 0:o.status)||!(null==t?void 0:t.response)){let o;try{o=yield this._authenticationClient.refreshAccessToken()}catch(e){throw i&&("function"==typeof n&&(yield n(Object.assign(Object.assign({},t),{code:"Access token is invalid"}))),"function"==typeof d&&d()),new X("SPA-AUTH_HELPER-HRA-SE01",null!==(c=null==e?void 0:e.name)&&void 0!==c?c:"Refresh token request failed.",null!==(a=null==e?void 0:e.message)&&void 0!==a?a:"An error occurred while trying to refresh the access token following a 401 response from the server.")}if(o)return l.all&&l.all(u).then((e=>Promise.resolve(e))).catch((t=>e(this,void 0,void 0,(function*(){return i&&("function"==typeof n&&(yield n(t)),"function"==typeof d&&d()),Promise.reject(t)}))))}return i&&("function"==typeof n&&(yield n(t)),"function"==typeof d&&d()),Promise.reject(t)}))));throw new X("SPA-AUTH_HELPER-HRA-IV02","Request to the provided endpoint is prohibited.","Requests can only be sent to resource servers specified by the `resourceServerURLs` attribute while initializing the SDK. The specified endpoint in this request cannot be found among the `resourceServerURLs`")}))}requestAccessToken(t,l,i,n,d,o){return e(this,void 0,void 0,(function*(){const c=yield this._dataLayer.getConfigData();if(c.storage===L.BrowserMemory&&c.enablePKCE&&l){const e=A.getPKCE(y.extractPKCEKeyFromStateParam(l));yield this._authenticationClient.setPKCECode(y.extractPKCEKeyFromStateParam(l),e)}else c.storage===L.WebWorker&&n&&(yield this._authenticationClient.setPKCECode(n,null!=d?d:""));return t?this._authenticationClient.requestAccessToken(t,null!=l?l:"",null!=d?d:"",void 0,o).then((()=>e(this,void 0,void 0,(function*(){return c.storage!==L.WebWorker?(A.setSignOutURL(yield this._authenticationClient.getSignOutURL(),c.clientID,this._instanceID),this._spaHelper&&(this._spaHelper.clearRefreshTokenTimeout(),this._spaHelper.refreshAccessTokenAutomatically(this)),i&&"function"==typeof i&&c.enableOIDCSessionManagement&&i()):this._spaHelper&&this._spaHelper.refreshAccessTokenAutomatically(this),this._authenticationClient.getBasicUserInfo()})))).catch((e=>Promise.reject(e))):Promise.reject(new X("SPA-AUTH_HELPER-RAT1-NF01","No authorization code.","No authorization code was found."))}))}trySignInSilently(t,l,i,n){var d;return e(this,void 0,void 0,(function*(){if(A.isInitializedSilentSignIn())return yield i.receivePromptNoneResponse(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});const o=document.getElementById("rpIFrame"),c=null===(d=null==o?void 0:o.contentDocument)||void 0===d?void 0:d.getElementById("promptNoneIFrame");try{const e=yield t(n);c.src=e}catch(e){return Promise.reject(e)}return new Promise(((t,i)=>{const n=setTimeout((()=>{t(!1)}),1e4),d=o=>e(this,void 0,void 0,(function*(){var e,c,a,s;const Z=o.data;"check_session_signed_out"==(null==Z?void 0:Z.type)&&(window.removeEventListener("message",d),clearTimeout(n),t(!1)),"check_session_signed_in"==(null==Z?void 0:Z.type)&&(null===(e=null==Z?void 0:Z.data)||void 0===e?void 0:e.code)&&l(null===(c=null==Z?void 0:Z.data)||void 0===c?void 0:c.code,null===(a=null==Z?void 0:Z.data)||void 0===a?void 0:a.sessionState,null===(s=null==Z?void 0:Z.data)||void 0===s?void 0:s.state).then((e=>{window.removeEventListener("message",d),t(e)})).catch((e=>{window.removeEventListener("message",d),i(e)})).finally((()=>{clearTimeout(n)}))}));window.addEventListener("message",d)}))}))}handleSignIn(t,l,i){return e(this,void 0,void 0,(function*(){const e=yield this._dataLayer.getConfigData();if(yield t())return Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""});if(e.storage!==L.WebWorker&&(yield this._authenticationClient.isAuthenticated()))return this._spaHelper.clearRefreshTokenTimeout(),this._spaHelper.refreshAccessTokenAutomatically(this),e.enableOIDCSessionManagement&&l(),Promise.resolve(yield this._authenticationClient.getBasicUserInfo());const n=new URL(window.location.href).searchParams.get("error"),d=new URL(window.location.href).searchParams.get("error_description");if(n){const e=new URL(window.location.href);throw e.searchParams.delete("error"),e.searchParams.delete("error_description"),history.pushState(null,document.title,e.toString()),new X("SPA-AUTH_HELPER-SI-SE01",n,null!=d?d:"")}if(e.storage===L.WebWorker&&i){const e=yield i();if(e)return e}}))}attachTokenToRequestConfig(t){return e(this,void 0,void 0,(function*(){const e=Object.assign({attachToken:!0},t);e.attachToken&&(e.shouldAttachIDPAccessToken?t.headers=Object.assign(Object.assign({},t.headers),{Authorization:`Bearer ${yield this.getIDPAccessToken()}`}):t.headers=Object.assign(Object.assign({},t.headers),{Authorization:`Bearer ${yield this.getAccessToken()}`}))}))}getBasicUserInfo(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getBasicUserInfo()}))}getDecodedIDToken(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getDecodedIDToken()}))}getDecodedIDPIDToken(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getDecodedIDToken()}))}getCryptoHelper(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getCryptoHelper()}))}getIDToken(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getIDToken()}))}getOIDCServiceEndpoints(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getOIDCServiceEndpoints()}))}getAccessToken(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.getAccessToken()}))}getIDPAccessToken(){var t;return e(this,void 0,void 0,(function*(){return null===(t=yield this._dataLayer.getSessionData())||void 0===t?void 0:t.access_token}))}getDataLayer(){return this._dataLayer}isAuthenticated(){return e(this,void 0,void 0,(function*(){return this._authenticationClient.isAuthenticated()}))}}class x{constructor(e){this._authenticationClient=e,this._dataLayer=this._authenticationClient.getDataLayer()}refreshAccessTokenAutomatically(t){var l,i;return e(this,void 0,void 0,(function*(){if(!(null!==(i=null===(l=yield this._dataLayer.getConfigData())||void 0===l?void 0:l.periodicTokenRefresh)&&void 0!==i&&i))return;const n=yield this._dataLayer.getSessionData();if(n.refresh_token){const l=parseInt(n.expires_in),i=setTimeout((()=>e(this,void 0,void 0,(function*(){yield t.refreshAccessToken()}))),1e3*(l<=10?l:l-10));yield this._dataLayer.setTemporaryDataParameter(s,JSON.stringify(i))}}))}getRefreshTimeoutTimer(){return e(this,void 0,void 0,(function*(){return(yield this._dataLayer.getTemporaryDataParameter(s))?JSON.parse(yield this._dataLayer.getTemporaryDataParameter(s)):-1}))}clearRefreshTokenTimeout(t){return e(this,void 0,void 0,(function*(){if(t)return void clearTimeout(t);const e=yield this.getRefreshTimeoutTimer();-1!==e&&clearTimeout(e)}))}}const w=(()=>{let t,l,i,n,d,o,c,a,s,Z,u;const r=(e,c,a,s,Z,r,h)=>{t=e,l=c,i=a,n=s,d=r,o=Z,u=h,n>-1&&b(),o>-1&&(Z=setInterval((()=>{G()}),1e3*o))},b=()=>e(void 0,void 0,void 0,(function*(){var o;if(!l||!t||!d)return;const c="opIFrame";const s=document.getElementById("rpIFrame");(null===(o=null==s?void 0:s.contentDocument)||void 0===o?void 0:o.getElementById(c)).src=l+"?client_id="+t+"&redirect_uri="+d,a=setInterval((function(){var n;return e(this,void 0,void 0,(function*(){const e=yield i();if(Boolean(t)&&Boolean(e)){const i=`${t} ${e}`,d=document.getElementById("rpIFrame"),o=(null===(n=null==d?void 0:d.contentDocument)||void 0===n?void 0:n.getElementById(c)).contentWindow;null==o||o.postMessage(i,l)}}))}),1e3*n),I()})),m=()=>{clearInterval(a),clearInterval(undefined)},I=()=>{null===window||void 0===window||window.addEventListener("message",(function(t){var i;return e(this,void 0,void 0,(function*(){const e=l;!e||(null==e?void 0:e.indexOf(t.origin))<0||"set_session_state_from_iframe"===(null===(i=null==t?void 0:t.data)||void 0===i?void 0:i.type)||"unchanged"===t.data||("error"===t.data?window.location.href=yield c():"changed"===t.data&&G())}))}),!1)},G=()=>e(void 0,void 0,void 0,(function*(){var e;const t=document.getElementById("rpIFrame"),l=null===(e=null==t?void 0:t.contentDocument)||void 0===e?void 0:e.getElementById("promptNoneIFrame");if(A.canSendPromptNoneRequest()){A.setPromptNoneRequestSent(!0);const e=t=>{var l,i,n;"set_session_state_from_iframe"===(null===(l=null==t?void 0:t.data)||void 0===l?void 0:l.type)&&(Z(null!==(n=null===(i=null==t?void 0:t.data)||void 0===i?void 0:i.data)&&void 0!==n?n:""),null===window||void 0===window||window.removeEventListener("message",e))};s!==L.BrowserMemory&&s!==L.WebWorker||null===window||void 0===window||window.addEventListener("message",e);const t=yield u({prompt:"none",response_mode:"query",state:F});l.src=t}})),p=t=>e(void 0,void 0,void 0,(function*(){var e,l;const i=new URL(window.location.href).searchParams.get("state"),n=new URL(window.location.href).searchParams.get(h),d=window.parent.parent;if(null!==i&&(i.includes(F)||i.includes("sign-in-silently"))){const o=new URL(window.location.href).searchParams.get("code");if(null!==o&&0!==o.length){if(i.includes("sign-in-silently")){const e={data:{code:o,sessionState:null!=n?n:"",state:i},type:"check_session_signed_in"};return sessionStorage.setItem("initialized-silent-sign-in","false"),d.postMessage(e,d.origin),A.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield A.waitTillPageRedirect(),!0}const c=new URL(window.location.href).searchParams.get("session_state");if(s===L.LocalStorage||s===L.SessionStorage)t&&(yield t(c));else{const t={data:null!=c?c:"",type:"set_session_state_from_iframe"};null===(l=null===(e=null===window||void 0===window?void 0:window.parent)||void 0===e?void 0:e.parent)||void 0===l||l.postMessage(t)}return A.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield A.waitTillPageRedirect(),!0}{if(i.includes("sign-in-silently")){const e={type:"check_session_signed_out"};return window.parent.parent.postMessage(e,d.origin),A.setPromptNoneRequestSent(!1),window.location.href="about:blank",yield A.waitTillPageRedirect(),!0}A.setPromptNoneRequestSent(!1);const e=yield c();return yield v.clearUserSessionData(),d.location.href=e,window.location.href="about:blank",yield A.waitTillPageRedirect(),!0}}return!1}));return(t,l,i)=>e(void 0,void 0,void 0,(function*(){var e;let n=document.createElement("iframe");n.setAttribute("id","rpIFrame"),n.style.display="none";let d=!1;n.onload=()=>{var e,t,l,i;n=document.getElementById("rpIFrame");const o=null==n?void 0:n.contentDocument,c=null==o?void 0:o.createElement("iframe");c&&(c.setAttribute("id","opIFrame"),c.style.display="none");const a=null==o?void 0:o.createElement("iframe");a&&(a.setAttribute("id","promptNoneIFrame"),a.style.display="none"),c&&(null===(t=null===(e=null==n?void 0:n.contentDocument)||void 0===e?void 0:e.body)||void 0===t||t.appendChild(c)),a&&(null===(i=null===(l=null==n?void 0:n.contentDocument)||void 0===l?void 0:l.body)||void 0===i||i.appendChild(a)),d=!0},null===(e=null===document||void 0===document?void 0:document.body)||void 0===e||e.appendChild(n),c=t,s=l,Z=i;for(;!1===d;)yield new Promise((e=>setTimeout(e,1)));return{initialize:r,receivePromptNoneResponse:p,reset:m}}))})();var Q="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function P(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function M(e){if(e.__esModule)return e;var t=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(e).forEach((function(l){var i=Object.getOwnPropertyDescriptor(e,l);Object.defineProperty(t,l,i.get?i:{enumerable:!0,get:function(){return e[l]}})})),t}var j={exports:{}},E=function(e,t){return function(){for(var l=new Array(arguments.length),i=0;i<l.length;i++)l[i]=arguments[i];return e.apply(t,l)}},D=E,O=Object.prototype.toString;function _(e){return Array.isArray(e)}function q(e){return void 0===e}function $(e){return"[object ArrayBuffer]"===O.call(e)}function ee(e){return null!==e&&"object"==typeof e}function te(e){if("[object Object]"!==O.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function le(e){return"[object Function]"===O.call(e)}function ie(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),_(e))for(var l=0,i=e.length;l<i;l++)t.call(null,e[l],l,e);else for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.call(null,e[n],n,e)}var ne={isArray:_,isArrayBuffer:$,isBuffer:function(e){return null!==e&&!q(e)&&null!==e.constructor&&!q(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===O.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&$(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:ee,isPlainObject:te,isUndefined:q,isDate:function(e){return"[object Date]"===O.call(e)},isFile:function(e){return"[object File]"===O.call(e)},isBlob:function(e){return"[object Blob]"===O.call(e)},isFunction:le,isStream:function(e){return ee(e)&&le(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===O.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:ie,merge:function e(){var t={};function l(l,i){te(t[i])&&te(l)?t[i]=e(t[i],l):te(l)?t[i]=e({},l):_(l)?t[i]=l.slice():t[i]=l}for(var i=0,n=arguments.length;i<n;i++)ie(arguments[i],l);return t},extend:function(e,t,l){return ie(t,(function(t,i){e[i]=l&&"function"==typeof t?D(t,l):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}},de=ne;function oe(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var ce=function(e,t,l){if(!t)return e;var i;if(l)i=l(t);else if(de.isURLSearchParams(t))i=t.toString();else{var n=[];de.forEach(t,(function(e,t){null!=e&&(de.isArray(e)?t+="[]":e=[e],de.forEach(e,(function(e){de.isDate(e)?e=e.toISOString():de.isObject(e)&&(e=JSON.stringify(e)),n.push(oe(t)+"="+oe(e))})))})),i=n.join("&")}if(i){var d=e.indexOf("#");-1!==d&&(e=e.slice(0,d)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e},ae=ne;function se(){this.handlers=[]}se.prototype.use=function(e,t,l){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!l&&l.synchronous,runWhen:l?l.runWhen:null}),this.handlers.length-1},se.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},se.prototype.forEach=function(e){ae.forEach(this.handlers,(function(t){null!==t&&e(t)}))};var Ze=se,ue="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function re(){throw new Error("setTimeout has not been defined")}function be(){throw new Error("clearTimeout has not been defined")}var he=re,me=be;function Ie(e){if(he===setTimeout)return setTimeout(e,0);if((he===re||!he)&&setTimeout)return he=setTimeout,setTimeout(e,0);try{return he(e,0)}catch(t){try{return he.call(null,e,0)}catch(t){return he.call(this,e,0)}}}"function"==typeof ue.setTimeout&&(he=setTimeout),"function"==typeof ue.clearTimeout&&(me=clearTimeout);var Ge,pe=[],ge=!1,Xe=-1;function ye(){ge&&Ge&&(ge=!1,Ge.length?pe=Ge.concat(pe):Xe=-1,pe.length&&Ve())}function Ve(){if(!ge){var e=Ie(ye);ge=!0;for(var t=pe.length;t;){for(Ge=pe,pe=[];++Xe<t;)Ge&&Ge[Xe].run();Xe=-1,t=pe.length}Ge=null,ge=!1,function(e){if(me===clearTimeout)return clearTimeout(e);if((me===be||!me)&&clearTimeout)return me=clearTimeout,clearTimeout(e);try{me(e)}catch(t){try{return me.call(null,e)}catch(t){return me.call(this,e)}}}(e)}}function We(e,t){this.fun=e,this.array=t}We.prototype.run=function(){this.fun.apply(null,this.array)};function Ce(){}var Re=Ce,Se=Ce,Ye=Ce,ve=Ce,Ke=Ce,Ne=Ce,Je=Ce;var ke=ue.performance||{},He=ke.now||ke.mozNow||ke.msNow||ke.oNow||ke.webkitNow||function(){return(new Date).getTime()};var fe=new Date;var Le={nextTick:function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var l=1;l<arguments.length;l++)t[l-1]=arguments[l];pe.push(new We(e,t)),1!==pe.length||ge||Ie(Ve)},title:"browser",browser:!0,env:{},argv:[],version:"",versions:{},on:Re,addListener:Se,once:Ye,off:ve,removeListener:Ke,removeAllListeners:Ne,emit:Je,binding:function(e){throw new Error("process.binding is not supported")},cwd:function(){return"/"},chdir:function(e){throw new Error("process.chdir is not supported")},umask:function(){return 0},hrtime:function(e){var t=.001*He.call(ke),l=Math.floor(t),i=Math.floor(t%1*1e9);return e&&(l-=e[0],(i-=e[1])<0&&(l--,i+=1e9)),[l,i]},platform:"browser",release:{},config:{},uptime:function(){return(new Date-fe)/1e3}},Ue=Le,Te=ne,Fe=function(e,t,l,i,n){return e.config=t,l&&(e.code=l),e.request=i,e.response=n,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e},Be={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Ae=Fe,ze=function(e,t,l,i,n){var d=new Error(e);return Ae(d,t,l,i,n)},xe=ze,we=ne,Qe=we.isStandardBrowserEnv()?{write:function(e,t,l,i,n,d){var o=[];o.push(e+"="+encodeURIComponent(t)),we.isNumber(l)&&o.push("expires="+new Date(l).toGMTString()),we.isString(i)&&o.push("path="+i),we.isString(n)&&o.push("domain="+n),!0===d&&o.push("secure"),document.cookie=o.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}},Pe=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)},Me=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e},je=ne,Ee=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"],De=ne,Oe=De.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),l=document.createElement("a");function i(e){var i=e;return t&&(l.setAttribute("href",i),i=l.href),l.setAttribute("href",i),{href:l.href,protocol:l.protocol?l.protocol.replace(/:$/,""):"",host:l.host,search:l.search?l.search.replace(/^\?/,""):"",hash:l.hash?l.hash.replace(/^#/,""):"",hostname:l.hostname,port:l.port,pathname:"/"===l.pathname.charAt(0)?l.pathname:"/"+l.pathname}}return e=i(window.location.href),function(t){var l=De.isString(t)?i(t):t;return l.protocol===e.protocol&&l.host===e.host}}():function(){return!0};function _e(e){this.message=e}_e.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},_e.prototype.__CANCEL__=!0;var qe=_e,$e=ne,et=function(e,t,l){var i=l.config.validateStatus;l.status&&i&&!i(l.status)?t(xe("Request failed with status code "+l.status,l.config,null,l.request,l)):e(l)},tt=Qe,lt=ce,it=function(e,t){return e&&!Pe(t)?Me(e,t):t},nt=function(e){var t,l,i,n={};return e?(je.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=je.trim(e.substr(0,i)).toLowerCase(),l=je.trim(e.substr(i+1)),t){if(n[t]&&Ee.indexOf(t)>=0)return;n[t]="set-cookie"===t?(n[t]?n[t]:[]).concat([l]):n[t]?n[t]+", "+l:l}})),n):n},dt=Oe,ot=ze,ct=Be,at=qe,st=function(e){return new Promise((function(t,l){var i,n=e.data,d=e.headers,o=e.responseType;function c(){e.cancelToken&&e.cancelToken.unsubscribe(i),e.signal&&e.signal.removeEventListener("abort",i)}$e.isFormData(n)&&delete d["Content-Type"];var a=new XMLHttpRequest;if(e.auth){var s=e.auth.username||"",Z=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(s+":"+Z)}var u=it(e.baseURL,e.url);function r(){if(a){var i="getAllResponseHeaders"in a?nt(a.getAllResponseHeaders()):null,n={data:o&&"text"!==o&&"json"!==o?a.response:a.responseText,status:a.status,statusText:a.statusText,headers:i,config:e,request:a};et((function(e){t(e),c()}),(function(e){l(e),c()}),n),a=null}}if(a.open(e.method.toUpperCase(),lt(u,e.params,e.paramsSerializer),!0),a.timeout=e.timeout,"onloadend"in a?a.onloadend=r:a.onreadystatechange=function(){a&&4===a.readyState&&(0!==a.status||a.responseURL&&0===a.responseURL.indexOf("file:"))&&setTimeout(r)},a.onabort=function(){a&&(l(ot("Request aborted",e,"ECONNABORTED",a)),a=null)},a.onerror=function(){l(ot("Network Error",e,null,a)),a=null},a.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",i=e.transitional||ct;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),l(ot(t,e,i.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",a)),a=null},$e.isStandardBrowserEnv()){var b=(e.withCredentials||dt(u))&&e.xsrfCookieName?tt.read(e.xsrfCookieName):void 0;b&&(d[e.xsrfHeaderName]=b)}"setRequestHeader"in a&&$e.forEach(d,(function(e,t){void 0===n&&"content-type"===t.toLowerCase()?delete d[t]:a.setRequestHeader(t,e)})),$e.isUndefined(e.withCredentials)||(a.withCredentials=!!e.withCredentials),o&&"json"!==o&&(a.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&a.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&a.upload&&a.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(i=function(e){a&&(l(!e||e&&e.type?new at("canceled"):e),a.abort(),a=null)},e.cancelToken&&e.cancelToken.subscribe(i),e.signal&&(e.signal.aborted?i():e.signal.addEventListener("abort",i))),n||(n=null),a.send(n)}))},Zt=ne,ut=function(e,t){Te.forEach(e,(function(l,i){i!==t&&i.toUpperCase()===t.toUpperCase()&&(e[t]=l,delete e[i])}))},rt=Fe,bt={"Content-Type":"application/x-www-form-urlencoded"};function ht(e,t){!Zt.isUndefined(e)&&Zt.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var mt,It={transitional:Be,adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==Ue&&"[object process]"===Object.prototype.toString.call(Ue))&&(mt=st),mt),transformRequest:[function(e,t){return ut(t,"Accept"),ut(t,"Content-Type"),Zt.isFormData(e)||Zt.isArrayBuffer(e)||Zt.isBuffer(e)||Zt.isStream(e)||Zt.isFile(e)||Zt.isBlob(e)?e:Zt.isArrayBufferView(e)?e.buffer:Zt.isURLSearchParams(e)?(ht(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):Zt.isObject(e)||t&&"application/json"===t["Content-Type"]?(ht(t,"application/json"),function(e,t,l){if(Zt.isString(e))try{return(t||JSON.parse)(e),Zt.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(l||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||It.transitional,l=t&&t.silentJSONParsing,i=t&&t.forcedJSONParsing,n=!l&&"json"===this.responseType;if(n||i&&Zt.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw rt(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};Zt.forEach(["delete","get","head"],(function(e){It.headers[e]={}})),Zt.forEach(["post","put","patch"],(function(e){It.headers[e]=Zt.merge(bt)}));var Gt=It,pt=ne,gt=Gt,Xt=function(e){return!(!e||!e.__CANCEL__)},yt=ne,Vt=function(e,t,l){var i=this||gt;return pt.forEach(l,(function(l){e=l.call(i,e,t)})),e},Wt=Xt,Ct=Gt,Rt=qe;function St(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Rt("canceled")}var Yt=ne,vt=function(e,t){t=t||{};var l={};function i(e,t){return Yt.isPlainObject(e)&&Yt.isPlainObject(t)?Yt.merge(e,t):Yt.isPlainObject(t)?Yt.merge({},t):Yt.isArray(t)?t.slice():t}function n(l){return Yt.isUndefined(t[l])?Yt.isUndefined(e[l])?void 0:i(void 0,e[l]):i(e[l],t[l])}function d(e){if(!Yt.isUndefined(t[e]))return i(void 0,t[e])}function o(l){return Yt.isUndefined(t[l])?Yt.isUndefined(e[l])?void 0:i(void 0,e[l]):i(void 0,t[l])}function c(l){return l in t?i(e[l],t[l]):l in e?i(void 0,e[l]):void 0}var a={url:d,method:d,data:d,baseURL:o,transformRequest:o,transformResponse:o,paramsSerializer:o,timeout:o,timeoutMessage:o,withCredentials:o,adapter:o,responseType:o,xsrfCookieName:o,xsrfHeaderName:o,onUploadProgress:o,onDownloadProgress:o,decompress:o,maxContentLength:o,maxBodyLength:o,transport:o,httpAgent:o,httpsAgent:o,cancelToken:o,socketPath:o,responseEncoding:o,validateStatus:c};return Yt.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=a[e]||n,i=t(e);Yt.isUndefined(i)&&t!==c||(l[e]=i)})),l},Kt="0.26.1",Nt=Kt,Jt={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){Jt[e]=function(l){return typeof l===e||"a"+(t<1?"n ":" ")+e}}));var kt={};Jt.transitional=function(e,t,l){function i(e,t){return"[Axios v"+Nt+"] Transitional option '"+e+"'"+t+(l?". "+l:"")}return function(l,n,d){if(!1===e)throw new Error(i(n," has been removed"+(t?" in "+t:"")));return t&&!kt[n]&&(kt[n]=!0,console.warn(i(n," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(l,n,d)}};var Ht={assertOptions:function(e,t,l){if("object"!=typeof e)throw new TypeError("options must be an object");for(var i=Object.keys(e),n=i.length;n-- >0;){var d=i[n],o=t[d];if(o){var c=e[d],a=void 0===c||o(c,d,e);if(!0!==a)throw new TypeError("option "+d+" must be "+a)}else if(!0!==l)throw Error("Unknown option "+d)}},validators:Jt},ft=ne,Lt=ce,Ut=Ze,Tt=function(e){return St(e),e.headers=e.headers||{},e.data=Vt.call(e,e.data,e.headers,e.transformRequest),e.headers=yt.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),yt.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||Ct.adapter)(e).then((function(t){return St(e),t.data=Vt.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return Wt(t)||(St(e),t&&t.response&&(t.response.data=Vt.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))},Ft=vt,Bt=Ht,At=Bt.validators;function zt(e){this.defaults=e,this.interceptors={request:new Ut,response:new Ut}}zt.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=Ft(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var l=t.transitional;void 0!==l&&Bt.assertOptions(l,{silentJSONParsing:At.transitional(At.boolean),forcedJSONParsing:At.transitional(At.boolean),clarifyTimeoutError:At.transitional(At.boolean)},!1);var i=[],n=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(n=n&&e.synchronous,i.unshift(e.fulfilled,e.rejected))}));var d,o=[];if(this.interceptors.response.forEach((function(e){o.push(e.fulfilled,e.rejected)})),!n){var c=[Tt,void 0];for(Array.prototype.unshift.apply(c,i),c=c.concat(o),d=Promise.resolve(t);c.length;)d=d.then(c.shift(),c.shift());return d}for(var a=t;i.length;){var s=i.shift(),Z=i.shift();try{a=s(a)}catch(e){Z(e);break}}try{d=Tt(a)}catch(e){return Promise.reject(e)}for(;o.length;)d=d.then(o.shift(),o.shift());return d},zt.prototype.getUri=function(e){return e=Ft(this.defaults,e),Lt(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},ft.forEach(["delete","get","head","options"],(function(e){zt.prototype[e]=function(t,l){return this.request(Ft(l||{},{method:e,url:t,data:(l||{}).data}))}})),ft.forEach(["post","put","patch"],(function(e){zt.prototype[e]=function(t,l,i){return this.request(Ft(i||{},{method:e,url:t,data:l}))}}));var xt=zt,wt=qe;function Qt(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var l=this;this.promise.then((function(e){if(l._listeners){var t,i=l._listeners.length;for(t=0;t<i;t++)l._listeners[t](e);l._listeners=null}})),this.promise.then=function(e){var t,i=new Promise((function(e){l.subscribe(e),t=e})).then(e);return i.cancel=function(){l.unsubscribe(t)},i},e((function(e){l.reason||(l.reason=new wt(e),t(l.reason))}))}Qt.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},Qt.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},Qt.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},Qt.source=function(){var e,t=new Qt((function(t){e=t}));return{token:t,cancel:e}};var Pt=Qt,Mt=ne,jt=ne,Et=E,Dt=xt,Ot=vt;var _t=function e(t){var l=new Dt(t),i=Et(Dt.prototype.request,l);return jt.extend(i,Dt.prototype,l),jt.extend(i,l),i.create=function(l){return e(Ot(t,l))},i}(Gt);_t.Axios=Dt,_t.Cancel=qe,_t.CancelToken=Pt,_t.isCancel=Xt,_t.VERSION=Kt,_t.all=function(e){return Promise.all(e)},_t.spread=function(e){return function(t){return e.apply(null,t)}},_t.isAxiosError=function(e){return Mt.isObject(e)&&!0===e.isAxiosError},j.exports=_t,j.exports.default=_t;var qt,$t=j.exports;let el=qt=class{constructor(){this.attachToken=()=>Promise.resolve(),this.requestStartCallback=()=>null,this.requestSuccessCallback=()=>null,this.requestErrorCallback=()=>null,this.requestFinishCallback=()=>null,this.init=this.init.bind(this),this.setHttpRequestErrorCallback=this.setHttpRequestErrorCallback.bind(this),this.setHttpRequestFinishCallback=this.setHttpRequestFinishCallback.bind(this),this.setHttpRequestStartCallback=this.setHttpRequestStartCallback.bind(this),this.setHttpRequestSuccessCallback=this.setHttpRequestSuccessCallback.bind(this)}static getInstance(){return this.axiosInstance||(this.axiosInstance=$t.create({withCredentials:!0}),this.clientInstance||(this.clientInstance=new qt),this.axiosInstance.interceptors.request.use((t=>e(this,void 0,void 0,(function*(){return yield this.clientInstance.requestHandler(t)})))),this.axiosInstance.interceptors.response.use((e=>this.clientInstance.successHandler(e)),(e=>this.clientInstance.errorHandler(e))),this.axiosInstance.all=$t.all,this.axiosInstance.spread=$t.spread,this.axiosInstance.init=this.clientInstance.init,this.axiosInstance.enableHandler=this.clientInstance.enableHandler,this.axiosInstance.disableHandler=this.clientInstance.disableHandler,this.axiosInstance.disableHandlerWithTimeout=this.clientInstance.disableHandlerWithTimeout,this.axiosInstance.setHttpRequestStartCallback=this.clientInstance.setHttpRequestStartCallback,this.axiosInstance.setHttpRequestSuccessCallback=this.clientInstance.setHttpRequestSuccessCallback,this.axiosInstance.setHttpRequestErrorCallback=this.clientInstance.setHttpRequestErrorCallback,this.axiosInstance.setHttpRequestFinishCallback=this.clientInstance.setHttpRequestFinishCallback),this.axiosInstance}requestHandler(t){return e(this,void 0,void 0,(function*(){if(yield this.attachToken(t),null==t?void 0:t.shouldEncodeToFormData){const e=null==t?void 0:t.data,l=new FormData;Object.keys(e).forEach((t=>{l.append(t,e[t])})),t.data=l}return t.startTimeInMs=(new Date).getTime(),qt.isHandlerEnabled&&this.requestStartCallback&&"function"==typeof this.requestStartCallback&&this.requestStartCallback(t),t}))}errorHandler(e){throw qt.isHandlerEnabled&&(this.requestErrorCallback&&"function"==typeof this.requestErrorCallback&&this.requestErrorCallback(e),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),e}successHandler(e){return qt.isHandlerEnabled&&(this.requestSuccessCallback&&"function"==typeof this.requestSuccessCallback&&this.requestSuccessCallback(e),this.requestFinishCallback&&"function"==typeof this.requestFinishCallback&&this.requestFinishCallback()),e}init(t=!0,l){return e(this,void 0,void 0,(function*(){qt.isHandlerEnabled=t,this.attachToken=l}))}enableHandler(){qt.isHandlerEnabled=!0}disableHandler(){qt.isHandlerEnabled=!1}disableHandlerWithTimeout(e=qt.DEFAULT_HANDLER_DISABLE_TIMEOUT){qt.isHandlerEnabled=!1,setTimeout((()=>{qt.isHandlerEnabled=!0}),e)}setHttpRequestStartCallback(e){this.requestStartCallback=e}setHttpRequestSuccessCallback(e){this.requestSuccessCallback=e}setHttpRequestErrorCallback(e){this.requestErrorCallback=e}setHttpRequestFinishCallback(e){this.requestFinishCallback=e}};el.DEFAULT_HANDLER_DISABLE_TIMEOUT=1e3,el=qt=function(e,t,l,i){var n,d=arguments.length,o=d<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,l):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,l,i);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(o=(d<3?n(o):d>3?n(t,l,o):n(t,l))||o);return d>3&&o&&Object.defineProperty(t,l,o),o}([e=>{}],el);class tl{setData(t,l){return e(this,void 0,void 0,(function*(){localStorage.setItem(t,l)}))}getData(t){var l;return e(this,void 0,void 0,(function*(){return null!==(l=localStorage.getItem(t))&&void 0!==l?l:"{}"}))}removeData(t){return e(this,void 0,void 0,(function*(){localStorage.removeItem(t)}))}}class ll{constructor(){this._data=new Map}setData(t,l){return e(this,void 0,void 0,(function*(){this._data.set(t,l)}))}getData(t){var l,i;return e(this,void 0,void 0,(function*(){return null!==(i=null===(l=this._data)||void 0===l?void 0:l.get(t))&&void 0!==i?i:"{}"}))}removeData(t){return e(this,void 0,void 0,(function*(){this._data.delete(t)}))}}class il{setData(t,l){return e(this,void 0,void 0,(function*(){sessionStorage.setItem(t,l)}))}getData(t){var l;return e(this,void 0,void 0,(function*(){return null!==(l=sessionStorage.getItem(t))&&void 0!==l?l:"{}"}))}removeData(t){return e(this,void 0,void 0,(function*(){sessionStorage.removeItem(t)}))}}var nl=[],dl=[],ol="undefined"!=typeof Uint8Array?Uint8Array:Array,cl=!1;function al(){cl=!0;for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t=0,l=e.length;t<l;++t)nl[t]=e[t],dl[e.charCodeAt(t)]=t;dl["-".charCodeAt(0)]=62,dl["_".charCodeAt(0)]=63}function sl(e,t,l){for(var i,n,d=[],o=t;o<l;o+=3)i=(e[o]<<16)+(e[o+1]<<8)+e[o+2],d.push(nl[(n=i)>>18&63]+nl[n>>12&63]+nl[n>>6&63]+nl[63&n]);return d.join("")}function Zl(e){var t;cl||al();for(var l=e.length,i=l%3,n="",d=[],o=16383,c=0,a=l-i;c<a;c+=o)d.push(sl(e,c,c+o>a?a:c+o));return 1===i?(t=e[l-1],n+=nl[t>>2],n+=nl[t<<4&63],n+="=="):2===i&&(t=(e[l-2]<<8)+e[l-1],n+=nl[t>>10],n+=nl[t>>4&63],n+=nl[t<<2&63],n+="="),d.push(n),d.join("")}function ul(e,t,l,i,n){var d,o,c=8*n-i-1,a=(1<<c)-1,s=a>>1,Z=-7,u=l?n-1:0,r=l?-1:1,b=e[t+u];for(u+=r,d=b&(1<<-Z)-1,b>>=-Z,Z+=c;Z>0;d=256*d+e[t+u],u+=r,Z-=8);for(o=d&(1<<-Z)-1,d>>=-Z,Z+=i;Z>0;o=256*o+e[t+u],u+=r,Z-=8);if(0===d)d=1-s;else{if(d===a)return o?NaN:1/0*(b?-1:1);o+=Math.pow(2,i),d-=s}return(b?-1:1)*o*Math.pow(2,d-i)}function rl(e,t,l,i,n,d){var o,c,a,s=8*d-n-1,Z=(1<<s)-1,u=Z>>1,r=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,b=i?0:d-1,h=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(c=isNaN(t)?1:0,o=Z):(o=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-o))<1&&(o--,a*=2),(t+=o+u>=1?r/a:r*Math.pow(2,1-u))*a>=2&&(o++,a/=2),o+u>=Z?(c=0,o=Z):o+u>=1?(c=(t*a-1)*Math.pow(2,n),o+=u):(c=t*Math.pow(2,u-1)*Math.pow(2,n),o=0));n>=8;e[l+b]=255&c,b+=h,c/=256,n-=8);for(o=o<<n|c,s+=n;s>0;e[l+b]=255&o,b+=h,o/=256,s-=8);e[l+b-h]|=128*m}var bl={}.toString,hl=Array.isArray||function(e){return"[object Array]"==bl.call(e)};pl.TYPED_ARRAY_SUPPORT=void 0===ue.TYPED_ARRAY_SUPPORT||ue.TYPED_ARRAY_SUPPORT;var ml=Il();function Il(){return pl.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function Gl(e,t){if(Il()<t)throw new RangeError("Invalid typed array length");return pl.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=pl.prototype:(null===e&&(e=new pl(t)),e.length=t),e}function pl(e,t,l){if(!(pl.TYPED_ARRAY_SUPPORT||this instanceof pl))return new pl(e,t,l);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return yl(this,e)}return gl(this,e,t,l)}function gl(e,t,l,i){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,l,i){if(t.byteLength,l<0||t.byteLength<l)throw new RangeError("'offset' is out of bounds");if(t.byteLength<l+(i||0))throw new RangeError("'length' is out of bounds");t=void 0===l&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,l):new Uint8Array(t,l,i);pl.TYPED_ARRAY_SUPPORT?(e=t).__proto__=pl.prototype:e=Vl(e,t);return e}(e,t,l,i):"string"==typeof t?function(e,t,l){"string"==typeof l&&""!==l||(l="utf8");if(!pl.isEncoding(l))throw new TypeError('"encoding" must be a valid string encoding');var i=0|Rl(t,l),n=(e=Gl(e,i)).write(t,l);n!==i&&(e=e.slice(0,n));return e}(e,t,l):function(e,t){if(Cl(t)){var l=0|Wl(t.length);return 0===(e=Gl(e,l)).length||t.copy(e,0,0,l),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(i=t.length)!=i?Gl(e,0):Vl(e,t);if("Buffer"===t.type&&hl(t.data))return Vl(e,t.data)}var i;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function Xl(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function yl(e,t){if(Xl(t),e=Gl(e,t<0?0:0|Wl(t)),!pl.TYPED_ARRAY_SUPPORT)for(var l=0;l<t;++l)e[l]=0;return e}function Vl(e,t){var l=t.length<0?0:0|Wl(t.length);e=Gl(e,l);for(var i=0;i<l;i+=1)e[i]=255&t[i];return e}function Wl(e){if(e>=Il())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Il().toString(16)+" bytes");return 0|e}function Cl(e){return!(null==e||!e._isBuffer)}function Rl(e,t){if(Cl(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var l=e.length;if(0===l)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return l;case"utf8":case"utf-8":case void 0:return _l(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*l;case"hex":return l>>>1;case"base64":return ql(e).length;default:if(i)return _l(e).length;t=(""+t).toLowerCase(),i=!0}}function Sl(e,t,l){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===l||l>this.length)&&(l=this.length),l<=0)return"";if((l>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return Al(this,t,l);case"utf8":case"utf-8":return Tl(this,t,l);case"ascii":return Fl(this,t,l);case"latin1":case"binary":return Bl(this,t,l);case"base64":return Ul(this,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return zl(this,t,l);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function Yl(e,t,l){var i=e[t];e[t]=e[l],e[l]=i}function vl(e,t,l,i,n){if(0===e.length)return-1;if("string"==typeof l?(i=l,l=0):l>2147483647?l=2147483647:l<-2147483648&&(l=-2147483648),l=+l,isNaN(l)&&(l=n?0:e.length-1),l<0&&(l=e.length+l),l>=e.length){if(n)return-1;l=e.length-1}else if(l<0){if(!n)return-1;l=0}if("string"==typeof t&&(t=pl.from(t,i)),Cl(t))return 0===t.length?-1:Kl(e,t,l,i,n);if("number"==typeof t)return t&=255,pl.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,l):Uint8Array.prototype.lastIndexOf.call(e,t,l):Kl(e,[t],l,i,n);throw new TypeError("val must be string, number or Buffer")}function Kl(e,t,l,i,n){var d,o=1,c=e.length,a=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;o=2,c/=2,a/=2,l/=2}function s(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(n){var Z=-1;for(d=l;d<c;d++)if(s(e,d)===s(t,-1===Z?0:d-Z)){if(-1===Z&&(Z=d),d-Z+1===a)return Z*o}else-1!==Z&&(d-=d-Z),Z=-1}else for(l+a>c&&(l=c-a),d=l;d>=0;d--){for(var u=!0,r=0;r<a;r++)if(s(e,d+r)!==s(t,r)){u=!1;break}if(u)return d}return-1}function Nl(e,t,l,i){l=Number(l)||0;var n=e.length-l;i?(i=Number(i))>n&&(i=n):i=n;var d=t.length;if(d%2!=0)throw new TypeError("Invalid hex string");i>d/2&&(i=d/2);for(var o=0;o<i;++o){var c=parseInt(t.substr(2*o,2),16);if(isNaN(c))return o;e[l+o]=c}return o}function Jl(e,t,l,i){return $l(_l(t,e.length-l),e,l,i)}function kl(e,t,l,i){return $l(function(e){for(var t=[],l=0;l<e.length;++l)t.push(255&e.charCodeAt(l));return t}(t),e,l,i)}function Hl(e,t,l,i){return kl(e,t,l,i)}function fl(e,t,l,i){return $l(ql(t),e,l,i)}function Ll(e,t,l,i){return $l(function(e,t){for(var l,i,n,d=[],o=0;o<e.length&&!((t-=2)<0);++o)i=(l=e.charCodeAt(o))>>8,n=l%256,d.push(n),d.push(i);return d}(t,e.length-l),e,l,i)}function Ul(e,t,l){return 0===t&&l===e.length?Zl(e):Zl(e.slice(t,l))}function Tl(e,t,l){l=Math.min(e.length,l);for(var i=[],n=t;n<l;){var d,o,c,a,s=e[n],Z=null,u=s>239?4:s>223?3:s>191?2:1;if(n+u<=l)switch(u){case 1:s<128&&(Z=s);break;case 2:128==(192&(d=e[n+1]))&&(a=(31&s)<<6|63&d)>127&&(Z=a);break;case 3:d=e[n+1],o=e[n+2],128==(192&d)&&128==(192&o)&&(a=(15&s)<<12|(63&d)<<6|63&o)>2047&&(a<55296||a>57343)&&(Z=a);break;case 4:d=e[n+1],o=e[n+2],c=e[n+3],128==(192&d)&&128==(192&o)&&128==(192&c)&&(a=(15&s)<<18|(63&d)<<12|(63&o)<<6|63&c)>65535&&a<1114112&&(Z=a)}null===Z?(Z=65533,u=1):Z>65535&&(Z-=65536,i.push(Z>>>10&1023|55296),Z=56320|1023&Z),i.push(Z),n+=u}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var l="",i=0;for(;i<t;)l+=String.fromCharCode.apply(String,e.slice(i,i+=4096));return l}(i)}pl.poolSize=8192,pl._augment=function(e){return e.__proto__=pl.prototype,e},pl.from=function(e,t,l){return gl(null,e,t,l)},pl.TYPED_ARRAY_SUPPORT&&(pl.prototype.__proto__=Uint8Array.prototype,pl.__proto__=Uint8Array),pl.alloc=function(e,t,l){return function(e,t,l,i){return Xl(t),t<=0?Gl(e,t):void 0!==l?"string"==typeof i?Gl(e,t).fill(l,i):Gl(e,t).fill(l):Gl(e,t)}(null,e,t,l)},pl.allocUnsafe=function(e){return yl(null,e)},pl.allocUnsafeSlow=function(e){return yl(null,e)},pl.isBuffer=ei,pl.compare=function(e,t){if(!Cl(e)||!Cl(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var l=e.length,i=t.length,n=0,d=Math.min(l,i);n<d;++n)if(e[n]!==t[n]){l=e[n],i=t[n];break}return l<i?-1:i<l?1:0},pl.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},pl.concat=function(e,t){if(!hl(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return pl.alloc(0);var l;if(void 0===t)for(t=0,l=0;l<e.length;++l)t+=e[l].length;var i=pl.allocUnsafe(t),n=0;for(l=0;l<e.length;++l){var d=e[l];if(!Cl(d))throw new TypeError('"list" argument must be an Array of Buffers');d.copy(i,n),n+=d.length}return i},pl.byteLength=Rl,pl.prototype._isBuffer=!0,pl.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)Yl(this,t,t+1);return this},pl.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)Yl(this,t,t+3),Yl(this,t+1,t+2);return this},pl.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)Yl(this,t,t+7),Yl(this,t+1,t+6),Yl(this,t+2,t+5),Yl(this,t+3,t+4);return this},pl.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?Tl(this,0,e):Sl.apply(this,arguments)},pl.prototype.equals=function(e){if(!Cl(e))throw new TypeError("Argument must be a Buffer");return this===e||0===pl.compare(this,e)},pl.prototype.inspect=function(){var e="";return this.length>0&&(e=this.toString("hex",0,50).match(/.{2}/g).join(" "),this.length>50&&(e+=" ... ")),"<Buffer "+e+">"},pl.prototype.compare=function(e,t,l,i,n){if(!Cl(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===l&&(l=e?e.length:0),void 0===i&&(i=0),void 0===n&&(n=this.length),t<0||l>e.length||i<0||n>this.length)throw new RangeError("out of range index");if(i>=n&&t>=l)return 0;if(i>=n)return-1;if(t>=l)return 1;if(this===e)return 0;for(var d=(n>>>=0)-(i>>>=0),o=(l>>>=0)-(t>>>=0),c=Math.min(d,o),a=this.slice(i,n),s=e.slice(t,l),Z=0;Z<c;++Z)if(a[Z]!==s[Z]){d=a[Z],o=s[Z];break}return d<o?-1:o<d?1:0},pl.prototype.includes=function(e,t,l){return-1!==this.indexOf(e,t,l)},pl.prototype.indexOf=function(e,t,l){return vl(this,e,t,l,!0)},pl.prototype.lastIndexOf=function(e,t,l){return vl(this,e,t,l,!1)},pl.prototype.write=function(e,t,l,i){if(void 0===t)i="utf8",l=this.length,t=0;else if(void 0===l&&"string"==typeof t)i=t,l=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(l)?(l|=0,void 0===i&&(i="utf8")):(i=l,l=void 0)}var n=this.length-t;if((void 0===l||l>n)&&(l=n),e.length>0&&(l<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var d=!1;;)switch(i){case"hex":return Nl(this,e,t,l);case"utf8":case"utf-8":return Jl(this,e,t,l);case"ascii":return kl(this,e,t,l);case"latin1":case"binary":return Hl(this,e,t,l);case"base64":return fl(this,e,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Ll(this,e,t,l);default:if(d)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),d=!0}},pl.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function Fl(e,t,l){var i="";l=Math.min(e.length,l);for(var n=t;n<l;++n)i+=String.fromCharCode(127&e[n]);return i}function Bl(e,t,l){var i="";l=Math.min(e.length,l);for(var n=t;n<l;++n)i+=String.fromCharCode(e[n]);return i}function Al(e,t,l){var i=e.length;(!t||t<0)&&(t=0),(!l||l<0||l>i)&&(l=i);for(var n="",d=t;d<l;++d)n+=Ol(e[d]);return n}function zl(e,t,l){for(var i=e.slice(t,l),n="",d=0;d<i.length;d+=2)n+=String.fromCharCode(i[d]+256*i[d+1]);return n}function xl(e,t,l){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>l)throw new RangeError("Trying to access beyond buffer length")}function wl(e,t,l,i,n,d){if(!Cl(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<d)throw new RangeError('"value" argument is out of bounds');if(l+i>e.length)throw new RangeError("Index out of range")}function Ql(e,t,l,i){t<0&&(t=65535+t+1);for(var n=0,d=Math.min(e.length-l,2);n<d;++n)e[l+n]=(t&255<<8*(i?n:1-n))>>>8*(i?n:1-n)}function Pl(e,t,l,i){t<0&&(t=4294967295+t+1);for(var n=0,d=Math.min(e.length-l,4);n<d;++n)e[l+n]=t>>>8*(i?n:3-n)&255}function Ml(e,t,l,i,n,d){if(l+i>e.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("Index out of range")}function jl(e,t,l,i,n){return n||Ml(e,0,l,4),rl(e,t,l,i,23,4),l+4}function El(e,t,l,i,n){return n||Ml(e,0,l,8),rl(e,t,l,i,52,8),l+8}pl.prototype.slice=function(e,t){var l,i=this.length;if((e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e),pl.TYPED_ARRAY_SUPPORT)(l=this.subarray(e,t)).__proto__=pl.prototype;else{var n=t-e;l=new pl(n,void 0);for(var d=0;d<n;++d)l[d]=this[d+e]}return l},pl.prototype.readUIntLE=function(e,t,l){e|=0,t|=0,l||xl(e,t,this.length);for(var i=this[e],n=1,d=0;++d<t&&(n*=256);)i+=this[e+d]*n;return i},pl.prototype.readUIntBE=function(e,t,l){e|=0,t|=0,l||xl(e,t,this.length);for(var i=this[e+--t],n=1;t>0&&(n*=256);)i+=this[e+--t]*n;return i},pl.prototype.readUInt8=function(e,t){return t||xl(e,1,this.length),this[e]},pl.prototype.readUInt16LE=function(e,t){return t||xl(e,2,this.length),this[e]|this[e+1]<<8},pl.prototype.readUInt16BE=function(e,t){return t||xl(e,2,this.length),this[e]<<8|this[e+1]},pl.prototype.readUInt32LE=function(e,t){return t||xl(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},pl.prototype.readUInt32BE=function(e,t){return t||xl(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},pl.prototype.readIntLE=function(e,t,l){e|=0,t|=0,l||xl(e,t,this.length);for(var i=this[e],n=1,d=0;++d<t&&(n*=256);)i+=this[e+d]*n;return i>=(n*=128)&&(i-=Math.pow(2,8*t)),i},pl.prototype.readIntBE=function(e,t,l){e|=0,t|=0,l||xl(e,t,this.length);for(var i=t,n=1,d=this[e+--i];i>0&&(n*=256);)d+=this[e+--i]*n;return d>=(n*=128)&&(d-=Math.pow(2,8*t)),d},pl.prototype.readInt8=function(e,t){return t||xl(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},pl.prototype.readInt16LE=function(e,t){t||xl(e,2,this.length);var l=this[e]|this[e+1]<<8;return 32768&l?4294901760|l:l},pl.prototype.readInt16BE=function(e,t){t||xl(e,2,this.length);var l=this[e+1]|this[e]<<8;return 32768&l?4294901760|l:l},pl.prototype.readInt32LE=function(e,t){return t||xl(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},pl.prototype.readInt32BE=function(e,t){return t||xl(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},pl.prototype.readFloatLE=function(e,t){return t||xl(e,4,this.length),ul(this,e,!0,23,4)},pl.prototype.readFloatBE=function(e,t){return t||xl(e,4,this.length),ul(this,e,!1,23,4)},pl.prototype.readDoubleLE=function(e,t){return t||xl(e,8,this.length),ul(this,e,!0,52,8)},pl.prototype.readDoubleBE=function(e,t){return t||xl(e,8,this.length),ul(this,e,!1,52,8)},pl.prototype.writeUIntLE=function(e,t,l,i){(e=+e,t|=0,l|=0,i)||wl(this,e,t,l,Math.pow(2,8*l)-1,0);var n=1,d=0;for(this[t]=255&e;++d<l&&(n*=256);)this[t+d]=e/n&255;return t+l},pl.prototype.writeUIntBE=function(e,t,l,i){(e=+e,t|=0,l|=0,i)||wl(this,e,t,l,Math.pow(2,8*l)-1,0);var n=l-1,d=1;for(this[t+n]=255&e;--n>=0&&(d*=256);)this[t+n]=e/d&255;return t+l},pl.prototype.writeUInt8=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,1,255,0),pl.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},pl.prototype.writeUInt16LE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,2,65535,0),pl.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Ql(this,e,t,!0),t+2},pl.prototype.writeUInt16BE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,2,65535,0),pl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Ql(this,e,t,!1),t+2},pl.prototype.writeUInt32LE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,4,4294967295,0),pl.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):Pl(this,e,t,!0),t+4},pl.prototype.writeUInt32BE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,4,4294967295,0),pl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Pl(this,e,t,!1),t+4},pl.prototype.writeIntLE=function(e,t,l,i){if(e=+e,t|=0,!i){var n=Math.pow(2,8*l-1);wl(this,e,t,l,n-1,-n)}var d=0,o=1,c=0;for(this[t]=255&e;++d<l&&(o*=256);)e<0&&0===c&&0!==this[t+d-1]&&(c=1),this[t+d]=(e/o>>0)-c&255;return t+l},pl.prototype.writeIntBE=function(e,t,l,i){if(e=+e,t|=0,!i){var n=Math.pow(2,8*l-1);wl(this,e,t,l,n-1,-n)}var d=l-1,o=1,c=0;for(this[t+d]=255&e;--d>=0&&(o*=256);)e<0&&0===c&&0!==this[t+d+1]&&(c=1),this[t+d]=(e/o>>0)-c&255;return t+l},pl.prototype.writeInt8=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,1,127,-128),pl.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},pl.prototype.writeInt16LE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,2,32767,-32768),pl.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):Ql(this,e,t,!0),t+2},pl.prototype.writeInt16BE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,2,32767,-32768),pl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):Ql(this,e,t,!1),t+2},pl.prototype.writeInt32LE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,4,2147483647,-2147483648),pl.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):Pl(this,e,t,!0),t+4},pl.prototype.writeInt32BE=function(e,t,l){return e=+e,t|=0,l||wl(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),pl.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):Pl(this,e,t,!1),t+4},pl.prototype.writeFloatLE=function(e,t,l){return jl(this,e,t,!0,l)},pl.prototype.writeFloatBE=function(e,t,l){return jl(this,e,t,!1,l)},pl.prototype.writeDoubleLE=function(e,t,l){return El(this,e,t,!0,l)},pl.prototype.writeDoubleBE=function(e,t,l){return El(this,e,t,!1,l)},pl.prototype.copy=function(e,t,l,i){if(l||(l=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<l&&(i=l),i===l)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(l<0||l>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-l&&(i=e.length-t+l);var n,d=i-l;if(this===e&&l<t&&t<i)for(n=d-1;n>=0;--n)e[n+t]=this[n+l];else if(d<1e3||!pl.TYPED_ARRAY_SUPPORT)for(n=0;n<d;++n)e[n+t]=this[n+l];else Uint8Array.prototype.set.call(e,this.subarray(l,l+d),t);return d},pl.prototype.fill=function(e,t,l,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,l=this.length):"string"==typeof l&&(i=l,l=this.length),1===e.length){var n=e.charCodeAt(0);n<256&&(e=n)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!pl.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<l)throw new RangeError("Out of range index");if(l<=t)return this;var d;if(t>>>=0,l=void 0===l?this.length:l>>>0,e||(e=0),"number"==typeof e)for(d=t;d<l;++d)this[d]=e;else{var o=Cl(e)?e:_l(new pl(e,i).toString()),c=o.length;for(d=0;d<l-t;++d)this[d+t]=o[d%c]}return this};var Dl=/[^+\/0-9A-Za-z-_]/g;function Ol(e){return e<16?"0"+e.toString(16):e.toString(16)}function _l(e,t){var l;t=t||1/0;for(var i=e.length,n=null,d=[],o=0;o<i;++o){if((l=e.charCodeAt(o))>55295&&l<57344){if(!n){if(l>56319){(t-=3)>-1&&d.push(239,191,189);continue}if(o+1===i){(t-=3)>-1&&d.push(239,191,189);continue}n=l;continue}if(l<56320){(t-=3)>-1&&d.push(239,191,189),n=l;continue}l=65536+(n-55296<<10|l-56320)}else n&&(t-=3)>-1&&d.push(239,191,189);if(n=null,l<128){if((t-=1)<0)break;d.push(l)}else if(l<2048){if((t-=2)<0)break;d.push(l>>6|192,63&l|128)}else if(l<65536){if((t-=3)<0)break;d.push(l>>12|224,l>>6&63|128,63&l|128)}else{if(!(l<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;d.push(l>>18|240,l>>12&63|128,l>>6&63|128,63&l|128)}}return d}function ql(e){return function(e){var t,l,i,n,d,o;cl||al();var c=e.length;if(c%4>0)throw new Error("Invalid string. Length must be a multiple of 4");d="="===e[c-2]?2:"="===e[c-1]?1:0,o=new ol(3*c/4-d),i=d>0?c-4:c;var a=0;for(t=0,l=0;t<i;t+=4,l+=3)n=dl[e.charCodeAt(t)]<<18|dl[e.charCodeAt(t+1)]<<12|dl[e.charCodeAt(t+2)]<<6|dl[e.charCodeAt(t+3)],o[a++]=n>>16&255,o[a++]=n>>8&255,o[a++]=255&n;return 2===d?(n=dl[e.charCodeAt(t)]<<2|dl[e.charCodeAt(t+1)]>>4,o[a++]=255&n):1===d&&(n=dl[e.charCodeAt(t)]<<10|dl[e.charCodeAt(t+1)]<<4|dl[e.charCodeAt(t+2)]>>2,o[a++]=n>>8&255,o[a++]=255&n),o}(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(Dl,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function $l(e,t,l,i){for(var n=0;n<i&&!(n+l>=t.length||n>=e.length);++n)t[n+l]=e[n];return n}function ei(e){return null!=e&&(!!e._isBuffer||ti(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&ti(e.slice(0,0))}(e))}function ti(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}var li=Object.freeze({__proto__:null,Buffer:pl,INSPECT_MAX_BYTES:50,SlowBuffer:function(e){return+e!=e&&(e=0),pl.alloc(+e)},isBuffer:ei,kMaxLength:ml}),ii={exports:{}},ni={},di={};Object.defineProperty(di,"__esModule",{value:!0}),di.default=function(e){var t=e.length,l=t%4;if(!l)return e;var i=t,n=4-l,d=t+n,o=pl.alloc(d);for(o.write(e);n--;)o.write("=",i++);return o.toString()},Object.defineProperty(ni,"__esModule",{value:!0});var oi=di;function ci(e,t){return void 0===t&&(t="utf8"),pl.isBuffer(e)?si(e.toString("base64")):si(pl.from(e,t).toString("base64"))}function ai(e){return e=e.toString(),oi.default(e).replace(/\-/g,"+").replace(/_/g,"/")}function si(e){return e.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}var Zi,ui=ci;ui.encode=ci,ui.decode=function(e,t){return void 0===t&&(t="utf8"),pl.from(ai(e),"base64").toString(t)},ui.toBase64=ai,ui.fromBase64=si,ui.toBuffer=function(e){return pl.from(ai(e),"base64")},ni.default=ui,(Zi=ii).exports=ni.default,Zi.exports.default=Zi.exports;var ri=ii.exports,bi={exports:{}};!function(e){!function(t,l){var i={};!function(e){e.__esModule=!0,e.digestLength=32,e.blockSize=64;var t=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function l(e,l,i,n,d){for(var o,c,a,s,Z,u,r,b,h,m,I,G,p;d>=64;){for(o=l[0],c=l[1],a=l[2],s=l[3],Z=l[4],u=l[5],r=l[6],b=l[7],m=0;m<16;m++)I=n+4*m,e[m]=(255&i[I])<<24|(255&i[I+1])<<16|(255&i[I+2])<<8|255&i[I+3];for(m=16;m<64;m++)G=((h=e[m-2])>>>17|h<<15)^(h>>>19|h<<13)^h>>>10,p=((h=e[m-15])>>>7|h<<25)^(h>>>18|h<<14)^h>>>3,e[m]=(G+e[m-7]|0)+(p+e[m-16]|0);for(m=0;m<64;m++)G=(((Z>>>6|Z<<26)^(Z>>>11|Z<<21)^(Z>>>25|Z<<7))+(Z&u^~Z&r)|0)+(b+(t[m]+e[m]|0)|0)|0,p=((o>>>2|o<<30)^(o>>>13|o<<19)^(o>>>22|o<<10))+(o&c^o&a^c&a)|0,b=r,r=u,u=Z,Z=s+G|0,s=a,a=c,c=o,o=G+p|0;l[0]+=o,l[1]+=c,l[2]+=a,l[3]+=s,l[4]+=Z,l[5]+=u,l[6]+=r,l[7]+=b,n+=64,d-=64}return n}var i=function(){function t(){this.digestLength=e.digestLength,this.blockSize=e.blockSize,this.state=new Int32Array(8),this.temp=new Int32Array(64),this.buffer=new Uint8Array(128),this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this.reset()}return t.prototype.reset=function(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.bufferLength=0,this.bytesHashed=0,this.finished=!1,this},t.prototype.clean=function(){for(var e=0;e<this.buffer.length;e++)this.buffer[e]=0;for(e=0;e<this.temp.length;e++)this.temp[e]=0;this.reset()},t.prototype.update=function(e,t){if(void 0===t&&(t=e.length),this.finished)throw new Error("SHA256: can't update because hash was finished.");var i=0;if(this.bytesHashed+=t,this.bufferLength>0){for(;this.bufferLength<64&&t>0;)this.buffer[this.bufferLength++]=e[i++],t--;64===this.bufferLength&&(l(this.temp,this.state,this.buffer,0,64),this.bufferLength=0)}for(t>=64&&(i=l(this.temp,this.state,e,i,t),t%=64);t>0;)this.buffer[this.bufferLength++]=e[i++],t--;return this},t.prototype.finish=function(e){if(!this.finished){var t=this.bytesHashed,i=this.bufferLength,n=t/536870912|0,d=t<<3,o=t%64<56?64:128;this.buffer[i]=128;for(var c=i+1;c<o-8;c++)this.buffer[c]=0;this.buffer[o-8]=n>>>24&255,this.buffer[o-7]=n>>>16&255,this.buffer[o-6]=n>>>8&255,this.buffer[o-5]=n>>>0&255,this.buffer[o-4]=d>>>24&255,this.buffer[o-3]=d>>>16&255,this.buffer[o-2]=d>>>8&255,this.buffer[o-1]=d>>>0&255,l(this.temp,this.state,this.buffer,0,o),this.finished=!0}for(c=0;c<8;c++)e[4*c+0]=this.state[c]>>>24&255,e[4*c+1]=this.state[c]>>>16&255,e[4*c+2]=this.state[c]>>>8&255,e[4*c+3]=this.state[c]>>>0&255;return this},t.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},t.prototype._saveState=function(e){for(var t=0;t<this.state.length;t++)e[t]=this.state[t]},t.prototype._restoreState=function(e,t){for(var l=0;l<this.state.length;l++)this.state[l]=e[l];this.bytesHashed=t,this.finished=!1,this.bufferLength=0},t}();e.Hash=i;var n=function(){function e(e){this.inner=new i,this.outer=new i,this.blockSize=this.inner.blockSize,this.digestLength=this.inner.digestLength;var t=new Uint8Array(this.blockSize);if(e.length>this.blockSize)(new i).update(e).finish(t).clean();else for(var l=0;l<e.length;l++)t[l]=e[l];for(l=0;l<t.length;l++)t[l]^=54;this.inner.update(t);for(l=0;l<t.length;l++)t[l]^=106;this.outer.update(t),this.istate=new Uint32Array(8),this.ostate=new Uint32Array(8),this.inner._saveState(this.istate),this.outer._saveState(this.ostate);for(l=0;l<t.length;l++)t[l]=0}return e.prototype.reset=function(){return this.inner._restoreState(this.istate,this.inner.blockSize),this.outer._restoreState(this.ostate,this.outer.blockSize),this},e.prototype.clean=function(){for(var e=0;e<this.istate.length;e++)this.ostate[e]=this.istate[e]=0;this.inner.clean(),this.outer.clean()},e.prototype.update=function(e){return this.inner.update(e),this},e.prototype.finish=function(e){return this.outer.finished?this.outer.finish(e):(this.inner.finish(e),this.outer.update(e,this.digestLength).finish(e)),this},e.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},e}();function d(e){var t=(new i).update(e),l=t.digest();return t.clean(),l}function o(e,t){var l=new n(e).update(t),i=l.digest();return l.clean(),i}function c(e,t,l,i){var n=i[0];if(0===n)throw new Error("hkdf: cannot expand more");t.reset(),n>1&&t.update(e),l&&t.update(l),t.update(i),t.finish(e),i[0]++}e.HMAC=n,e.hash=d,e.default=d,e.hmac=o;var a=new Uint8Array(e.digestLength);function s(e,t,l,i){void 0===t&&(t=a),void 0===i&&(i=32);for(var d=new Uint8Array([1]),s=o(t,e),Z=new n(s),u=new Uint8Array(Z.digestLength),r=u.length,b=new Uint8Array(i),h=0;h<i;h++)r===u.length&&(c(u,Z,l,d),r=0),b[h]=u[r++];return Z.clean(),u.fill(0),d.fill(0),b}function Z(e,t,l,i){for(var d=new n(e),o=d.digestLength,c=new Uint8Array(4),a=new Uint8Array(o),s=new Uint8Array(o),Z=new Uint8Array(i),u=0;u*o<i;u++){var r=u+1;c[0]=r>>>24&255,c[1]=r>>>16&255,c[2]=r>>>8&255,c[3]=r>>>0&255,d.reset(),d.update(t),d.update(c),d.finish(s);for(var b=0;b<o;b++)a[b]=s[b];for(b=2;b<=l;b++){d.reset(),d.update(s).finish(s);for(var h=0;h<o;h++)a[h]^=s[h]}for(b=0;b<o&&u*o+b<i;b++)Z[u*o+b]=a[b]}for(u=0;u<o;u++)a[u]=s[u]=0;for(u=0;u<4;u++)c[u]=0;return d.clean(),Z}e.hkdf=s,e.pbkdf2=Z}(i);var n=i.default;for(var d in i)n[d]=i[d];e.exports=n}()}(bi);var hi=P(bi.exports),mi=crypto;const Ii=e=>e instanceof CryptoKey,Gi=new TextEncoder,pi=new TextDecoder;const gi=e=>{let t=e;t instanceof Uint8Array&&(t=pi.decode(t)),t=t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return(e=>{const t=atob(e),l=new Uint8Array(t.length);for(let e=0;e<t.length;e++)l[e]=t.charCodeAt(e);return l})(t)}catch(e){throw new TypeError("The input to be decoded is not correctly encoded.")}};class Xi extends Error{constructor(e){var t;super(e),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,null===(t=Error.captureStackTrace)||void 0===t||t.call(Error,this,this.constructor)}static get code(){return"ERR_JOSE_GENERIC"}}class yi extends Xi{constructor(e,t="unspecified",l="unspecified"){super(e),this.code="ERR_JWT_CLAIM_VALIDATION_FAILED",this.claim=t,this.reason=l}static get code(){return"ERR_JWT_CLAIM_VALIDATION_FAILED"}}class Vi extends Xi{constructor(e,t="unspecified",l="unspecified"){super(e),this.code="ERR_JWT_EXPIRED",this.claim=t,this.reason=l}static get code(){return"ERR_JWT_EXPIRED"}}class Wi extends Xi{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class Ci extends Xi{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class Ri extends Xi{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class Si extends Xi{constructor(){super(...arguments),this.code="ERR_JWT_INVALID"}static get code(){return"ERR_JWT_INVALID"}}class Yi extends Xi{constructor(){super(...arguments),this.code="ERR_JWKS_INVALID"}static get code(){return"ERR_JWKS_INVALID"}}class vi extends Xi{constructor(){super(...arguments),this.code="ERR_JWKS_NO_MATCHING_KEY",this.message="no applicable key found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_NO_MATCHING_KEY"}}class Ki extends Xi{constructor(){super(...arguments),this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS",this.message="multiple matching keys found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_MULTIPLE_MATCHING_KEYS"}}class Ni extends Xi{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}function Ji(){return"function"==typeof WebSocketPair}function ki(e,t="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)}function Hi(e,t){return e.name===t}function fi(e){return parseInt(e.name.slice(4),10)}function Li(e,t,...l){switch(t){case"HS256":case"HS384":case"HS512":{if(!Hi(e.algorithm,"HMAC"))throw ki("HMAC");const l=parseInt(t.slice(2),10);if(fi(e.algorithm.hash)!==l)throw ki(`SHA-${l}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!Hi(e.algorithm,"RSASSA-PKCS1-v1_5"))throw ki("RSASSA-PKCS1-v1_5");const l=parseInt(t.slice(2),10);if(fi(e.algorithm.hash)!==l)throw ki(`SHA-${l}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!Hi(e.algorithm,"RSA-PSS"))throw ki("RSA-PSS");const l=parseInt(t.slice(2),10);if(fi(e.algorithm.hash)!==l)throw ki(`SHA-${l}`,"algorithm.hash");break}case Ji()&&"EdDSA":if(!Hi(e.algorithm,"NODE-ED25519"))throw ki("NODE-ED25519");break;case"ES256":case"ES384":case"ES512":{if(!Hi(e.algorithm,"ECDSA"))throw ki("ECDSA");const l=function(e){switch(e){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}(t);if(e.algorithm.namedCurve!==l)throw ki(l,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}!function(e,t){if(t.length&&!t.some((t=>e.usages.includes(t)))){let e="CryptoKey does not support this operation, its usages must include ";if(t.length>2){const l=t.pop();e+=`one of ${t.join(", ")}, or ${l}.`}else 2===t.length?e+=`one of ${t[0]} or ${t[1]}.`:e+=`${t[0]}.`;throw new TypeError(e)}}(e,l)}var Ui=(e,...t)=>{let l="Key must be ";if(t.length>2){const e=t.pop();l+=`one of type ${t.join(", ")}, or ${e}.`}else 2===t.length?l+=`one of type ${t[0]} or ${t[1]}.`:l+=`of type ${t[0]}.`;return null==e?l+=` Received ${e}`:"function"==typeof e&&e.name?l+=` Received function ${e.name}`:"object"==typeof e&&null!=e&&e.constructor&&e.constructor.name&&(l+=` Received an instance of ${e.constructor.name}`),l},Ti=e=>Ii(e);const Fi=["CryptoKey"];function Bi(e){if("object"!=typeof(t=e)||null===t||"[object Object]"!==Object.prototype.toString.call(e))return!1;var t;if(null===Object.getPrototypeOf(e))return!0;let l=e;for(;null!==Object.getPrototypeOf(l);)l=Object.getPrototypeOf(l);return Object.getPrototypeOf(e)===l}const Ai=async e=>{var t,l;const{algorithm:i,keyUsages:n}=function(e){let t,l;switch(e.kty){case"oct":switch(e.alg){case"HS256":case"HS384":case"HS512":t={name:"HMAC",hash:`SHA-${e.alg.slice(-3)}`},l=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":throw new Ci(`${e.alg} keys cannot be imported as CryptoKey instances`);case"A128GCM":case"A192GCM":case"A256GCM":case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":t={name:"AES-GCM"},l=["encrypt","decrypt"];break;case"A128KW":case"A192KW":case"A256KW":t={name:"AES-KW"},l=["wrapKey","unwrapKey"];break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":t={name:"PBKDF2"},l=["deriveBits"];break;default:throw new Ci('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"RSA":switch(e.alg){case"PS256":case"PS384":case"PS512":t={name:"RSA-PSS",hash:`SHA-${e.alg.slice(-3)}`},l=e.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":t={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.alg.slice(-3)}`},l=e.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":t={name:"RSA-OAEP",hash:`SHA-${parseInt(e.alg.slice(-3),10)||1}`},l=e.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new Ci('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(e.alg){case"ES256":t={name:"ECDSA",namedCurve:"P-256"},l=e.d?["sign"]:["verify"];break;case"ES384":t={name:"ECDSA",namedCurve:"P-384"},l=e.d?["sign"]:["verify"];break;case"ES512":t={name:"ECDSA",namedCurve:"P-521"},l=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:"ECDH",namedCurve:e.crv},l=e.d?["deriveBits"]:[];break;default:throw new Ci('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case Ji()&&"OKP":if("EdDSA"!==e.alg)throw new Ci('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');if("Ed25519"!==e.crv)throw new Ci('Invalid or unsupported JWK "crv" (Subtype of Key Pair) Parameter value');t={name:"NODE-ED25519",namedCurve:"NODE-ED25519"},l=e.d?["sign"]:["verify"];break;default:throw new Ci('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:t,keyUsages:l}}(e),d=[i,null!==(t=e.ext)&&void 0!==t&&t,null!==(l=e.key_ops)&&void 0!==l?l:n];if("PBKDF2"===i.name)return mi.subtle.importKey("raw",gi(e.k),...d);const o={...e};return delete o.alg,mi.subtle.importKey("jwk",o,...d)};const zi=(e,t,l)=>{e.startsWith("HS")||"dir"===e||e.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(e)?(e=>{if(!(e instanceof Uint8Array)){if(!Ti(e))throw new TypeError(Ui(e,...Fi,"Uint8Array"));if("secret"!==e.type)throw new TypeError(`${Fi.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}})(t):((e,t)=>{if(!Ti(e))throw new TypeError(Ui(e,...Fi));if("secret"===e.type)throw new TypeError(`${Fi.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if("sign"===t&&"public"===e.type)throw new TypeError(`${Fi.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if("decrypt"===t&&"public"===e.type)throw new TypeError(`${Fi.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(e.algorithm&&"verify"===t&&"private"===e.type)throw new TypeError(`${Fi.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(e.algorithm&&"encrypt"===t&&"private"===e.type)throw new TypeError(`${Fi.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)})(t,l)};const xi=async(e,t,l,i)=>{const n=await function(e,t,l){if(Ii(t))return Li(t,e,l),t;if(t instanceof Uint8Array){if(!e.startsWith("HS"))throw new TypeError(Ui(t,...Fi));return mi.subtle.importKey("raw",t,{hash:`SHA-${e.slice(-3)}`,name:"HMAC"},!1,[l])}throw new TypeError(Ui(t,...Fi,"Uint8Array"))}(e,t,"verify");((e,t)=>{if(e.startsWith("RS")||e.startsWith("PS")){const{modulusLength:l}=t.algorithm;if("number"!=typeof l||l<2048)throw new TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)}})(e,n);const d=function(e,t){const l=`SHA-${e.slice(-3)}`;switch(e){case"HS256":case"HS384":case"HS512":return{hash:l,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:l,name:"RSA-PSS",saltLength:e.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:l,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:l,name:"ECDSA",namedCurve:t.namedCurve};case Ji()&&"EdDSA":const{namedCurve:i}=t;return{name:i,namedCurve:i};default:throw new Ci(`alg ${e} is not supported either by JOSE or your javascript runtime`)}}(e,n.algorithm);try{return await mi.subtle.verify(d,n,l,i)}catch(e){return!1}};async function wi(e,t,l){var i;if(!Bi(e))throw new Ri("Flattened JWS must be an object");if(void 0===e.protected&&void 0===e.header)throw new Ri('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==e.protected&&"string"!=typeof e.protected)throw new Ri("JWS Protected Header incorrect type");if(void 0===e.payload)throw new Ri("JWS Payload missing");if("string"!=typeof e.signature)throw new Ri("JWS Signature missing or incorrect type");if(void 0!==e.header&&!Bi(e.header))throw new Ri("JWS Unprotected Header incorrect type");let n={};if(e.protected){const t=gi(e.protected);try{n=JSON.parse(pi.decode(t))}catch(e){throw new Ri("JWS Protected Header is invalid")}}if(!((...e)=>{const t=e.filter(Boolean);if(0===t.length||1===t.length)return!0;let l;for(const e of t){const t=Object.keys(e);if(l&&0!==l.size)for(const e of t){if(l.has(e))return!1;l.add(e)}else l=new Set(t)}return!0})(n,e.header))throw new Ri("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const d={...n,...e.header},o=function(e,t,l,i,n){if(void 0!==n.crit&&void 0===i.crit)throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');if(!i||void 0===i.crit)return new Set;if(!Array.isArray(i.crit)||0===i.crit.length||i.crit.some((e=>"string"!=typeof e||0===e.length)))throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let d;d=void 0!==l?new Map([...Object.entries(l),...t.entries()]):t;for(const t of i.crit){if(!d.has(t))throw new Ci(`Extension Header Parameter "${t}" is not recognized`);if(void 0===n[t])throw new e(`Extension Header Parameter "${t}" is missing`);if(d.get(t)&&void 0===i[t])throw new e(`Extension Header Parameter "${t}" MUST be integrity protected`)}return new Set(i.crit)}(Ri,new Map([["b64",!0]]),null==l?void 0:l.crit,n,d);let c=!0;if(o.has("b64")&&(c=n.b64,"boolean"!=typeof c))throw new Ri('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:a}=d;if("string"!=typeof a||!a)throw new Ri('JWS "alg" (Algorithm) Header Parameter missing or invalid');const s=l&&((e,t)=>{if(void 0!==t&&(!Array.isArray(t)||t.some((e=>"string"!=typeof e))))throw new TypeError(`"${e}" option must be an array of strings`);if(t)return new Set(t)})("algorithms",l.algorithms);if(s&&!s.has(a))throw new Wi('"alg" (Algorithm) Header Parameter not allowed');if(c){if("string"!=typeof e.payload)throw new Ri("JWS Payload must be a string")}else if("string"!=typeof e.payload&&!(e.payload instanceof Uint8Array))throw new Ri("JWS Payload must be a string or an Uint8Array instance");let Z=!1;"function"==typeof t&&(t=await t(n,e),Z=!0),zi(a,t,"verify");const u=function(...e){const t=e.reduce(((e,{length:t})=>e+t),0),l=new Uint8Array(t);let i=0;return e.forEach((e=>{l.set(e,i),i+=e.length})),l}(Gi.encode(null!==(i=e.protected)&&void 0!==i?i:""),Gi.encode("."),"string"==typeof e.payload?Gi.encode(e.payload):e.payload),r=gi(e.signature);if(!await xi(a,t,r,u))throw new Ni;let b;b=c?gi(e.payload):"string"==typeof e.payload?Gi.encode(e.payload):e.payload;const h={payload:b};return void 0!==e.protected&&(h.protectedHeader=n),void 0!==e.header&&(h.unprotectedHeader=e.header),Z?{...h,key:t}:h}const Qi=/^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;var Pi=e=>{const t=Qi.exec(e);if(!t)throw new TypeError("Invalid time period format");const l=parseFloat(t[1]);switch(t[2].toLowerCase()){case"sec":case"secs":case"second":case"seconds":case"s":return Math.round(l);case"minute":case"minutes":case"min":case"mins":case"m":return Math.round(60*l);case"hour":case"hours":case"hr":case"hrs":case"h":return Math.round(3600*l);case"day":case"days":case"d":return Math.round(86400*l);case"week":case"weeks":case"w":return Math.round(604800*l);default:return Math.round(31557600*l)}};const Mi=e=>e.toLowerCase().replace(/^application\//,"");var ji=(e,t,l={})=>{const{typ:i}=l;if(i&&("string"!=typeof e.typ||Mi(e.typ)!==Mi(i)))throw new yi('unexpected "typ" JWT header value',"typ","check_failed");let n;try{n=JSON.parse(pi.decode(t))}catch(e){}if(!Bi(n))throw new Si("JWT Claims Set must be a top-level JSON object");const{issuer:d}=l;if(d&&!(Array.isArray(d)?d:[d]).includes(n.iss))throw new yi('unexpected "iss" claim value',"iss","check_failed");const{subject:o}=l;if(o&&n.sub!==o)throw new yi('unexpected "sub" claim value',"sub","check_failed");const{audience:c}=l;if(c&&(a=n.aud,s="string"==typeof c?[c]:c,!("string"==typeof a?s.includes(a):Array.isArray(a)&&s.some(Set.prototype.has.bind(new Set(a))))))throw new yi('unexpected "aud" claim value',"aud","check_failed");var a,s;let Z;switch(typeof l.clockTolerance){case"string":Z=Pi(l.clockTolerance);break;case"number":Z=l.clockTolerance;break;case"undefined":Z=0;break;default:throw new TypeError("Invalid clockTolerance option type")}const{currentDate:u}=l,r=(b=u||new Date,Math.floor(b.getTime()/1e3));var b;if((void 0!==n.iat||l.maxTokenAge)&&"number"!=typeof n.iat)throw new yi('"iat" claim must be a number',"iat","invalid");if(void 0!==n.nbf){if("number"!=typeof n.nbf)throw new yi('"nbf" claim must be a number',"nbf","invalid");if(n.nbf>r+Z)throw new yi('"nbf" claim timestamp check failed',"nbf","check_failed")}if(void 0!==n.exp){if("number"!=typeof n.exp)throw new yi('"exp" claim must be a number',"exp","invalid");if(n.exp<=r-Z)throw new Vi('"exp" claim timestamp check failed',"exp","check_failed")}if(l.maxTokenAge){const e=r-n.iat;if(e-Z>("number"==typeof l.maxTokenAge?l.maxTokenAge:Pi(l.maxTokenAge)))throw new Vi('"iat" claim timestamp check failed (too far in the past)',"iat","check_failed");if(e<0-Z)throw new yi('"iat" claim timestamp check failed (it should be in the past)',"iat","check_failed")}return n};async function Ei(e,t,l){var i;const n=await async function(e,t,l){if(e instanceof Uint8Array&&(e=pi.decode(e)),"string"!=typeof e)throw new Ri("Compact JWS must be a string or Uint8Array");const{0:i,1:n,2:d,length:o}=e.split(".");if(3!==o)throw new Ri("Invalid Compact JWS");const c=await wi({payload:n,protected:i,signature:d},t,l),a={payload:c.payload,protectedHeader:c.protectedHeader};return"function"==typeof t?{...a,key:c.key}:a}(e,t,l);if((null===(i=n.protectedHeader.crit)||void 0===i?void 0:i.includes("b64"))&&!1===n.protectedHeader.b64)throw new Si("JWTs MUST NOT use unencoded payload");const d={payload:ji(n.protectedHeader,n.payload,l),protectedHeader:n.protectedHeader};return"function"==typeof t?{...d,key:n.key}:d}function Di(e){return Bi(e)}class Oi{constructor(e){if(this._cached=new WeakMap,!function(e){return e&&"object"==typeof e&&Array.isArray(e.keys)&&e.keys.every(Di)}(e))throw new Yi("JSON Web Key Set malformed");var t;this._jwks=(t=e,"function"==typeof structuredClone?structuredClone(t):JSON.parse(JSON.stringify(t)))}async getKey(e,t){const{alg:l,kid:i}={...e,...t.header},n=function(e){switch("string"==typeof e&&e.slice(0,2)){case"RS":case"PS":return"RSA";case"ES":return"EC";case"Ed":return"OKP";default:throw new Ci('Unsupported "alg" value for a JSON Web Key Set')}}(l),d=this._jwks.keys.filter((e=>{let t=n===e.kty;if(t&&"string"==typeof i&&(t=i===e.kid),t&&"string"==typeof e.alg&&(t=l===e.alg),t&&"string"==typeof e.use&&(t="sig"===e.use),t&&Array.isArray(e.key_ops)&&(t=e.key_ops.includes("verify")),t&&"EdDSA"===l&&(t="Ed25519"===e.crv||"Ed448"===e.crv),t)switch(l){case"ES256":t="P-256"===e.crv;break;case"ES256K":t="secp256k1"===e.crv;break;case"ES384":t="P-384"===e.crv;break;case"ES512":t="P-521"===e.crv}return t})),{0:o,length:c}=d;if(0===c)throw new vi;if(1!==c)throw new Ki;const a=this._cached.get(o)||this._cached.set(o,{}).get(o);if(void 0===a[l]){const e=await async function(e,t,l){if(!Bi(e))throw new TypeError("JWK must be an object");if(t||(t=e.alg),"string"!=typeof t||!t)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');switch(e.kty){case"oct":if("string"!=typeof e.k||!e.k)throw new TypeError('missing "k" (Key Value) Parameter value');return null!=l||(l=!0!==e.ext),l?Ai({...e,alg:t,ext:!1}):gi(e.k);case"RSA":if(void 0!==e.oth)throw new Ci('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return Ai({...e,alg:t});default:throw new Ci('Unsupported "kty" (Key Type) Parameter value')}}({...o,ext:!0},l);if(e instanceof Uint8Array||"public"!==e.type)throw new Yi("JSON Web Key Set members must be public keys");a[l]=e}return a[l]}}var _i={exports:{}},qi={exports:{}},$i=M(li);
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
!function(e,t){var l=$i,i=l.Buffer;function n(e,t){for(var l in e)t[l]=e[l]}function d(e,t,l){return i(e,t,l)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=l:(n(l,t),t.Buffer=d),d.prototype=Object.create(i.prototype),n(i,d),d.from=function(e,t,l){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,l)},d.alloc=function(e,t,l){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=i(e);return void 0!==t?"string"==typeof l?n.fill(t,l):n.fill(t):n.fill(0),n},d.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},d.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return l.SlowBuffer(e)}}(qi,qi.exports);var en=qi.exports.Buffer,tn=Q.crypto||Q.msCrypto;tn&&tn.getRandomValues?_i.exports=function(e,t){if(e>4294967295)throw new RangeError("requested too many random bytes");var l=en.allocUnsafe(e);if(e>0)if(e>65536)for(var i=0;i<e;i+=65536)tn.getRandomValues(l.slice(i,i+65536));else tn.getRandomValues(l);if("function"==typeof t)return Ue.nextTick((function(){t(null,l)}));return l}:_i.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")};var ln=_i.exports;class nn{base64URLEncode(e){return ri.encode(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}base64URLDecode(e){return ri.decode(e).toString()}hashSha256(e){return pl.from(hi((new TextEncoder).encode(e)))}generateRandomBytes(e){return ln(e)}verifyJwt(e,t,l,i,n,d,o,c){const a={algorithms:l,audience:i,clockTolerance:o,subject:d};return(null==c||c)&&(a.issuer=n),Ei(e,(s={keys:[t]},Oi.prototype.getKey.bind(new Oi(s))),a).then((()=>Promise.resolve(!0))).catch((e=>{var t;return Promise.reject(new X("SPA-CRYPTO-UTILS-VJ-IV01",null!==(t=null==e?void 0:e.reason)&&void 0!==t?t:JSON.stringify(e),`${null==e?void 0:e.code} ${null==e?void 0:e.claim}`))}));var s}}const dn=(t,i,n)=>e(void 0,void 0,void 0,(function*(){var d;const o=(e=>{switch(e){case L.LocalStorage:return new tl;case L.SessionStorage:return new il;case L.BrowserMemory:return new ll;default:return new il}})(i.storage),c=new nn,a=new v;yield a.initialize(i,o,c,t);const s=new x(a),Z=a.getDataLayer(),u=yield w((()=>e(void 0,void 0,void 0,(function*(){return a.getSignOutURL()}))),null!==(d=i.storage)&&void 0!==d?d:L.SessionStorage,(e=>Z.setSessionDataParameter(h,null!=e?e:""))),r=n(a,s);let m=!1;const I=el.getInstance();let p,g,X=!0;(null==I?void 0:I.init)&&(yield I.init(!0,(t=>e(void 0,void 0,void 0,(function*(){yield r.attachTokenToRequestConfig(t)})))));const V=()=>e(void 0,void 0,void 0,(function*(){const t=yield a.getOIDCServiceEndpoints(),l=yield Z.getConfigData();r.initializeSessionManger(l,t,(()=>e(void 0,void 0,void 0,(function*(){return(yield a.getBasicUserInfo()).sessionState}))),(t=>e(void 0,void 0,void 0,(function*(){return a.getAuthorizationURL(t)}))),u)})),W=()=>e(void 0,void 0,void 0,(function*(){return yield u.receivePromptNoneResponse((t=>e(void 0,void 0,void 0,(function*(){yield Z.setSessionDataParameter(h,null!=t?t:"")}))))})),C=e=>{e.preventSignOutURLUpdate&&(m=!0)},R=(t,l,i,n)=>e(void 0,void 0,void 0,(function*(){return yield r.requestAccessToken(t,l,V,void 0,i,n)})),S=(t={})=>e(void 0,void 0,void 0,(function*(){const e=yield Z.getConfigData(),l=yield a.getAuthorizationURL(Object.assign({prompt:"none",state:"sign-in-silently"},t)),i=new URL(l);i.searchParams.set("response_mode","query");const n=i.toString();if(e.storage===L.BrowserMemory&&e.enablePKCE){const e=i.searchParams.get(G);A.setPKCE(y.extractPKCEKeyFromStateParam(null!=e?e:""),yield a.getPKCECode(null!=e?e:""))}return n}));return{disableHttpHandler:()=>(r.disableHttpHandler(I),X=!1,!0),enableHttpHandler:()=>(r.enableHttpHandler(I),X=!0,!0),getAccessToken:()=>e(void 0,void 0,void 0,(function*(){return r.getAccessToken()})),getBasicUserInfo:()=>e(void 0,void 0,void 0,(function*(){return r.getBasicUserInfo()})),getCryptoHelper:()=>e(void 0,void 0,void 0,(function*(){return r.getCryptoHelper()})),getDataLayer:()=>e(void 0,void 0,void 0,(function*(){return r.getDataLayer()})),getDecodedIDToken:()=>e(void 0,void 0,void 0,(function*(){return r.getDecodedIDToken()})),getHttpClient:()=>I,getIDToken:()=>e(void 0,void 0,void 0,(function*(){return r.getIDToken()})),getOIDCServiceEndpoints:()=>e(void 0,void 0,void 0,(function*(){return r.getOIDCServiceEndpoints()})),httpRequest:t=>e(void 0,void 0,void 0,(function*(){return yield r.httpRequest(I,t,X,p,g)})),httpRequestAll:t=>e(void 0,void 0,void 0,(function*(){return yield r.httpRequestAll(t,I,X,p,g)})),isAuthenticated:()=>e(void 0,void 0,void 0,(function*(){return r.isAuthenticated()})),isSessionActive:()=>e(void 0,void 0,void 0,(function*(){return"true"===(yield Z.getSessionStatus())})),refreshAccessToken:()=>e(void 0,void 0,void 0,(function*(){try{return yield r.refreshAccessToken(C)}catch(e){return Promise.reject(e)}})),requestCustomGrant:t=>e(void 0,void 0,void 0,(function*(){return yield r.requestCustomGrant(t,C)})),revokeAccessToken:()=>e(void 0,void 0,void 0,(function*(){const e=yield s.getRefreshTimeoutTimer();return a.revokeAccessToken().then((()=>(u.reset(),s.clearRefreshTokenTimeout(e),Promise.resolve(!0)))).catch((e=>Promise.reject(e)))})),setHttpRequestErrorCallback:e=>{p=e},setHttpRequestFinishCallback:e=>{(null==I?void 0:I.setHttpRequestFinishCallback)&&I.setHttpRequestFinishCallback(e)},setHttpRequestStartCallback:e=>{(null==I?void 0:I.setHttpRequestStartCallback)&&I.setHttpRequestStartCallback(e)},setHttpRequestSuccessCallback:e=>{(null==I?void 0:I.setHttpRequestSuccessCallback)&&I.setHttpRequestSuccessCallback(e)},signIn:(t,n,d,o,c)=>e(void 0,void 0,void 0,(function*(){var s,u,m;const I=yield r.handleSignIn(W,V,void 0);if(I)return I;{let r,I,g,X={params:{}};if((null==i?void 0:i.responseMode)===l.formPost&&n?(r=n,I=null!=d?d:"",g=null!=o?o:""):(r=null!==(s=new URL(window.location.href).searchParams.get(b))&&void 0!==s?s:"",I=null!==(u=new URL(window.location.href).searchParams.get(h))&&void 0!==u?u:"",g=null!==(m=new URL(window.location.href).searchParams.get(G))&&void 0!==m?m:"",A.removeAuthorizationCode()),r&&g){p="true",e(void 0,void 0,void 0,(function*(){yield Z.setSessionStatus(p)}));const t=yield Z.getTemporaryDataParameter("token_request_config");return t&&"string"==typeof t&&(X=JSON.parse(t)),R(r,I,g,X)}return a.getAuthorizationURL(t).then((t=>e(void 0,void 0,void 0,(function*(){if(i.storage===L.BrowserMemory&&i.enablePKCE){const e=y.extractPKCEKeyFromStateParam(g);A.setPKCE(e,yield a.getPKCECode(g))}return c&&Z.setTemporaryDataParameter("token_request_config",JSON.stringify(c)),location.href=t,yield A.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})}))))}var p})),signOut:()=>e(void 0,void 0,void 0,(function*(){return(yield a.isAuthenticated())&&!m?location.href=yield a.getSignOutURL():location.href=A.getSignOutURL(i.clientID,t),s.clearRefreshTokenTimeout(),yield Z.removeOIDCProviderMetaData(),yield Z.removeTemporaryData(),yield Z.removeSessionData(),yield Z.removeSessionStatus(),yield A.waitTillPageRedirect(),!0})),trySignInSilently:(t={})=>e(void 0,void 0,void 0,(function*(){return yield r.trySignInSilently(S,R,u,t)})),updateConfig:t=>e(void 0,void 0,void 0,(function*(){const e=yield Z.getConfigData(),l=!(e&&e.endpoints&&e.endpoints.checkSessionIframe&&t&&t.endpoints&&t.endpoints.checkSessionIframe&&e.endpoints.checkSessionIframe===t.endpoints.checkSessionIframe),i=Object.assign(Object.assign({},e),t);yield a.updateConfig(i),i.enableOIDCSessionManagement&&l&&(u.reset(),V())}))}})),on=(t,i,n,d)=>e(void 0,void 0,void 0,(function*(){var o;let c;const a=null!==(o=null==i?void 0:i.requestTimeout)&&void 0!==o?o:6e4;let s=!0,Z=!1;const u=(e=>{switch(e){case L.LocalStorage:return new tl;case L.SessionStorage:return new il;case L.BrowserMemory:return new ll;default:return new il}})(i.storage),r=new nn,m=new v;yield m.initialize(i,u,r,t);const I=new x(m),p=yield w((()=>e(void 0,void 0,void 0,(function*(){const e={type:"sign-out"};try{return yield W(e)}catch(e){return A.getSignOutURL(i.clientID,t)}}))),i.storage,(e=>C(e))),g=d(m,I),V=new n,W=e=>{const t=new MessageChannel;return V.postMessage(e,[t.port2]),new Promise(((e,l)=>{const i=setTimeout((()=>{l(new X("SPA-WEB_WORKER_CLIENT-COM-TO01","Operation timed out.","No response was received from the web worker for "+a/1e3+" since dispatching the request"))}),a);return t.port1.onmessage=({data:n})=>{if(clearTimeout(i),t.port1.close(),t.port2.close(),null==n?void 0:n.success){const t=(null==n?void 0:n.data)?JSON.parse(null==n?void 0:n.data):null;(null==n?void 0:n.blob)&&(t.data=null==n?void 0:n.blob),e(t)}else l(n.error?JSON.parse(n.error):null)}}))},C=e=>W({data:e,type:"set_session_state"}),R=()=>W({type:"start_auto_refresh_token"}),S=()=>e(void 0,void 0,void 0,(function*(){const t=yield H(),l=yield f();g.initializeSessionManger(l,t,(()=>e(void 0,void 0,void 0,(function*(){return(yield U()).sessionState}))),(t=>e(void 0,void 0,void 0,(function*(){return(yield K(t)).authorizationURL}))),p)})),Y=(t={})=>e(void 0,void 0,void 0,(function*(){var e;const l=yield f(),i={data:Object.assign({prompt:"none",state:"sign-in-silently"},t),type:"get_auth_url"},n=yield W(i),d=y.extractPKCEKeyFromStateParam(null!==(e=new URL(n.authorizationURL).searchParams.get(G))&&void 0!==e?e:"");n.pkce&&l.enablePKCE&&A.setPKCE(d,n.pkce);const o=n.authorizationURL,c=new URL(o);c.searchParams.set("response_mode","query");return c.toString()})),K=t=>e(void 0,void 0,void 0,(function*(){const l=yield f();return W({data:t,type:"get_auth_url"}).then((t=>e(void 0,void 0,void 0,(function*(){var e;if(t.pkce&&l.enablePKCE){const l=y.extractPKCEKeyFromStateParam(null!==(e=new URL(t.authorizationURL).searchParams.get(G))&&void 0!==e?e:"");A.setPKCE(l,t.pkce)}return Promise.resolve(t)}))))})),N=(l,i,n,d)=>e(void 0,void 0,void 0,(function*(){const e=yield f(),o=y.extractPKCEKeyFromStateParam(n),c={data:{code:l,pkce:e.enablePKCE?A.getPKCE(o):void 0,sessionState:i,state:n,tokenRequestConfig:d},type:"request_get_token"};return e.enablePKCE&&A.removePKCE(o),W(c).then((l=>W({type:"get_sign_out_url"}).then((i=>(A.setSignOutURL(i,e.clientID,t),e.enableOIDCSessionManagement&&S(),R(),Promise.resolve(l)))).catch((e=>Promise.reject(e))))).catch((e=>Promise.reject(e)))})),J=()=>e(void 0,void 0,void 0,(function*(){return yield p.receivePromptNoneResponse((t=>e(void 0,void 0,void 0,(function*(){return C(t)}))))})),k=()=>e(void 0,void 0,void 0,(function*(){if(yield T())return yield R(),i.enableOIDCSessionManagement&&S(),U()})),H=()=>W({type:"get-oidc-service-endpoints"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),f=()=>W({type:"get_config_data"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),U=()=>W({type:"get-basic-user-info"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),T=()=>W({type:"is_authenticated"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e)));return{disableHttpHandler:()=>W({type:"disable_http_handler"}).then((()=>(s=!1,Promise.resolve(!0)))).catch((e=>Promise.reject(e))),enableHttpHandler:()=>W({type:"enable_http_handler"}).then((()=>(s=!0,Promise.resolve(!0)))).catch((e=>Promise.reject(e))),getBasicUserInfo:U,getCryptoHelper:()=>W({type:"get-crypto-helper"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getDecodedIDPIDToken:()=>W({type:"get-decoded-idp-id-token"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getDecodedIDToken:()=>W({type:"get-decoded-id-token"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getIDToken:()=>W({type:"get_id_token"}).then((e=>Promise.resolve(e))).catch((e=>Promise.reject(e))),getOIDCServiceEndpoints:H,httpRequest:t=>{(null==t?void 0:t.data)&&(null==t?void 0:t.data)instanceof FormData&&(t.data=Object.assign(Object.assign({},Object.fromEntries(null==t?void 0:t.data.entries())),{formData:!0}));return W({data:t,type:"http-request"}).then((e=>Promise.resolve(e))).catch((t=>e(void 0,void 0,void 0,(function*(){return s&&("function"==typeof c.requestErrorCallback&&(yield c.requestErrorCallback(t)),"function"==typeof c.requestFinishCallback&&c.requestFinishCallback()),Promise.reject(t)}))))},httpRequestAll:t=>W({data:t,type:"http-request-all"}).then((e=>Promise.resolve(e))).catch((t=>e(void 0,void 0,void 0,(function*(){return s&&("function"==typeof c.requestErrorCallback&&(yield c.requestErrorCallback(t)),"function"==typeof c.requestFinishCallback&&c.requestFinishCallback()),Promise.reject(t)})))),initialize:()=>{c||(c={requestErrorCallback:()=>Promise.resolve(),requestFinishCallback:()=>null,requestStartCallback:()=>null,requestSuccessCallback:()=>null}),V.onmessage=({data:e})=>{switch(e.type){case"request-finish":(null==c?void 0:c.requestFinishCallback)&&(null==c||c.requestFinishCallback());break;case"request-start":(null==c?void 0:c.requestStartCallback)&&(null==c||c.requestStartCallback());break;case"request-success":(null==c?void 0:c.requestSuccessCallback)&&(null==c||c.requestSuccessCallback(e.data?JSON.parse(e.data):null))}};return W({data:i,type:"init"}).then((()=>Promise.resolve(!0))).catch((e=>Promise.reject(e)))},isAuthenticated:T,refreshAccessToken:()=>W({type:"refresh_access-token"}),requestCustomGrant:e=>W({data:e,type:"request-custom-grant"}).then((t=>(e.preventSignOutURLUpdate&&(Z=!0),Promise.resolve(t)))).catch((e=>Promise.reject(e))),revokeAccessToken:()=>W({type:"revoke-access-token"}).then((e=>(p.reset(),Promise.resolve(e)))).catch((e=>Promise.reject(e))),setHttpRequestErrorCallback:e=>{e&&"function"==typeof e&&(c.requestErrorCallback=e)},setHttpRequestFinishCallback:e=>{e&&"function"==typeof e&&(c.requestFinishCallback=e)},setHttpRequestStartCallback:e=>{e&&"function"==typeof e&&(c.requestStartCallback=e)},setHttpRequestSuccessCallback:e=>{e&&"function"==typeof e&&(c.requestSuccessCallback=e)},signIn:(t,n,d,o,c)=>e(void 0,void 0,void 0,(function*(){var a,s,Z;const u=yield g.handleSignIn(J,S,k);if(u)return u;{let u,r,m;return(null==i?void 0:i.responseMode)===l.formPost&&n?(u=n,r=null!=d?d:"",m=null!=o?o:""):(u=null!==(a=new URL(window.location.href).searchParams.get(b))&&void 0!==a?a:"",r=null!==(s=new URL(window.location.href).searchParams.get(h))&&void 0!==s?s:"",m=null!==(Z=new URL(window.location.href).searchParams.get(G))&&void 0!==Z?Z:"",A.removeAuthorizationCode()),u&&m?N(u,r,m,c):K(t).then((t=>e(void 0,void 0,void 0,(function*(){return location.href=t.authorizationURL,yield A.waitTillPageRedirect(),Promise.resolve({allowedScopes:"",displayName:"",email:"",sessionState:"",sub:"",tenantDomain:"",username:""})})))).catch((e=>Promise.reject(e)))}})),signOut:()=>new Promise(((l,n)=>{if(!Z){return W({type:"sign-out"}).then((t=>e(void 0,void 0,void 0,(function*(){return window.location.href=t,yield A.waitTillPageRedirect(),l(!0)})))).catch((e=>n(e)))}window.location.href=A.getSignOutURL(i.clientID,t),A.waitTillPageRedirect().then((()=>Promise.resolve(!0)))})),trySignInSilently:(t={})=>e(void 0,void 0,void 0,(function*(){return yield g.trySignInSilently(Y,N,p,t)})),updateConfig:t=>e(void 0,void 0,void 0,(function*(){const e=yield f(),l=!(e&&e.endpoints&&e.endpoints.checkSessionIframe&&t&&t.endpoints&&t.endpoints.checkSessionIframe&&e.endpoints.checkSessionIframe===t.endpoints.checkSessionIframe),i=Object.assign(Object.assign({},e),t),n={data:i,type:"update_config"};yield W(n),i.enableOIDCSessionManagement&&l&&(p.reset(),S())}))}})),cn={checkSessionInterval:3,clientHost:origin,enableOIDCSessionManagement:!1,periodicTokenRefresh:!1,sessionRefreshInterval:300,storage:L.SessionStorage};class an{constructor(e){this._authHelper=z,this._worker=f,this._initialized=!1,this._startedInitialize=!1,this._onSignInCallback=()=>null,this._onSignOutCallback=()=>null,this._onSignOutFailedCallback=()=>null,this._onEndUserSession=()=>null,this._onInitialize=()=>null,this._onCustomGrant=new Map,this._instanceID=e}instantiateAuthHelper(e){this._authHelper=e||z}instantiateWorker(e){this._worker=e||f}_isInitialized(){return e(this,void 0,void 0,(function*(){if(!this._startedInitialize)return!1;let e=0;for(;!this._initialized;)1e4===e&&console.warn("It is taking longer than usual for the object to be initialized"),yield new Promise((e=>setTimeout(e,1))),e++;return!0}))}_validateMethod(t=!0){return e(this,void 0,void 0,(function*(){return(yield this._isInitialized())?!(t&&!(yield this.isAuthenticated()))||Promise.reject(new X("SPA-AUTH_CLIENT-VM-IV02","The user is not authenticated.","The user must be authenticated first.")):Promise.reject(new X("SPA-AUTH_CLIENT-VM-NF01","The SDK is not initialized.","The SDK must be initialized first."))}))}
/**
     * This method returns the instance of the singleton class.
     * If an ID is provided, it will return the instance with the given ID.
     * If no ID is provided, it will return the default instance value 0.
     *
     * @return {AsgardeoSPAClient} - Returns the instance of the singleton class.
     *
     * @example
     * ```
     * const auth = AsgardeoSPAClient.getInstance();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getinstance
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */static getInstance(e){var t,l;return e&&(null===(t=this._instances)||void 0===t?void 0:t.get(e))?this._instances.get(e):!e&&(null===(l=this._instances)||void 0===l?void 0:l.get(0))?this._instances.get(0):e?(this._instances.set(e,new an(e)),this._instances.get(e)):(this._instances.set(0,new an(0)),this._instances.get(0))}
/**
     * This method initializes the `AsgardeoSPAClient` instance.
     *
     * @param {ConfigInterface} config The config object to initialize with.
     *
     * @return {Promise<boolean>} - Resolves to `true` if initialization is successful.
     *
     * @example
     * ```
     * auth.initialize({
     *     signInRedirectURL: "http://localhost:3000/sign-in",
     *     clientID: "client ID",
     *     baseUrl: "https://api.asgardeo.io"
     * });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#initialize
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */initialize(t,l,i){var n;return e(this,void 0,void 0,(function*(){if(this._storage=null!==(n=t.storage)&&void 0!==n?n:L.SessionStorage,this._initialized=!1,this._startedInitialize=!0,l&&this.instantiateAuthHelper(l),i&&this.instantiateWorker(i),this._storage!==L.WebWorker){if(!this._client){const e=t,l=Object.assign({},cn);this._client=yield dn(this._instanceID,Object.assign(Object.assign({},l),e),((e,t)=>new this._authHelper(e,t)))}return this._initialized=!0,this._onInitialize&&this._onInitialize(!0),window.addEventListener("message",(e=>{var t;"refresh-access-token-error"===(null===(t=null==e?void 0:e.data)||void 0===t?void 0:t.type)&&this.signOut()})),Promise.resolve(!0)}if(!this._client){const e=t;return this._client=yield on(this._instanceID,Object.assign(Object.assign({},cn),e),this._worker,((e,t)=>new this._authHelper(e,t))),this._client.initialize().then((()=>(this._onInitialize&&this._onInitialize(!0),this._initialized=!0,Promise.resolve(!0)))).catch((e=>Promise.reject(e)))}return Promise.resolve(!0)}))}
/**
     * This method returns a Promise that resolves with the basic user information obtained from the ID token.
     *
     * @return {Promise<BasicUserInfo>} - A promise that resolves with the user information.
     *
     * @example
     * ```
     * auth.getBasicUserInfo().then((response) => {
     *    // console.log(response);
     * }).catch((error) => {
     *    // console.error(error);
     * });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getuserinfo
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getBasicUserInfo(){var t;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(t=this._client)||void 0===t?void 0:t.getBasicUserInfo()}))}
/**
     * This method initiates the authentication flow. This should be called twice.
     *  1. To initiate the authentication flow.
     *  2. To obtain the access token after getting the authorization code.
     *
     * To satisfy the second condition, one of the two strategies mentioned below can be used:
     *  1. Redirect the user back to the same login page that initiated the authentication flow.
     *  2. Call the `signIn()` method in the page the user is redirected to after authentication.
     *
     * **To fire a callback function after signing in, use the `on()` method.**
     * **To learn more about the `on()` method:**
     * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
     *
     * @param {SignInConfig} config - The sign-in config.
     * The `SignInConfig` object has these two attributes in addition to any custom key-value pairs.
     *  1. fidp - Specifies the FIDP parameter that is used to take the user directly to an IdP login page.
     *  2. forceInit: Specifies if the OIDC Provider Meta Data should be loaded again from the `well-known`
     * endpoint.
     *  3. Any other parameters that should be appended to the authorization request.
     * @param {string} authorizationCode - The authorization code. (Optional)
     * @param {string} sessionState - The session state. (Optional)
     * @param {string} state - The state. (Optional)
     *
     * @return {Promise<BasicUserInfo>} - A promise that resolves with the user information.
     *
     * @example
     * ```
     * auth.signIn();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signin
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */signIn(t,l,i,n,d){var o;return e(this,void 0,void 0,(function*(){if(yield this._isInitialized(),A.canContinueSignIn(Boolean(null==t?void 0:t.callOnlyOnRedirect),l))return null==t||delete t.callOnlyOnRedirect,null===(o=this._client)||void 0===o?void 0:o.signIn(t,l,i,n,d).then((e=>(this._onSignInCallback&&(e.allowedScopes||e.displayName||e.email||e.username)&&this._onSignInCallback(e),e)))}))}trySignInSilently(t){var l;return e(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!A.wasSignInCalled())return null===(l=this._client)||void 0===l?void 0:l.trySignInSilently(t).then((e=>{if(this._onSignInCallback&&e){const t=e;(t.allowedScopes||t.displayName||t.email||t.username)&&this._onSignInCallback(t)}return e}))}))}
/**
     * This method initiates the sign-out flow.
     *
     * **To fire a callback function after signing out, use the `on()` method.**
     * **To learn more about the `on()` method:**
     * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
     *
     * @return {Promise<boolean>} - Returns a promise that resolves with `true` if sign out is successful.
     *
     * @example
     * ```
     * auth.signOut();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signout
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */signOut(){var t,l;return e(this,void 0,void 0,(function*(){yield this._validateMethod(!1);return null!==(l=yield null===(t=this._client)||void 0===t?void 0:t.signOut())&&void 0!==l&&l}))}
/**
     * This method sends an API request to a protected endpoint.
     * The access token is automatically attached to the header of the request.
     * This is the only way by which protected endpoints can be accessed
     * when the web worker is used to store session information.
     *
     * @param {HttpRequestConfig} config -  The config object containing attributes necessary to send a request.
     *
     * @return {Promise<HttpResponse>} - Returns a Promise that resolves with the response to the request.
     *
     * @example
     * ```
     *  const requestConfig = {
     *      headers: {
     *          "Accept": "application/json",
     *          "Access-Control-Allow-Origin": "https://api.asgardeo.io/myaccount",
     *          "Content-Type": "application/scim+json"
     *      },
     *      method: "GET",
     *      url: "https://api.asgardeo.io/scim2/me"
     *  };
     *
     *  return auth.httpRequest(requestConfig)
     *     .then((response) => {
     *           // console.log(response);
     *      })
     *      .catch((error) => {
     *           // console.error(error);
     *      });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequest
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */httpRequest(t){var l;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(t.attachToken),null===(l=this._client)||void 0===l?void 0:l.httpRequest(t)}))}
/**
     * This method sends multiple API requests to a protected endpoint.
     * The access token is automatically attached to the header of the request.
     * This is the only way by which multiple requests can be sent to protected endpoints
     * when the web worker is used to store session information.
     *
     * @param {HttpRequestConfig[]} config -  The config object containing attributes necessary to send a request.
     *
     * @return {Promise<HttpResponse[]>} - Returns a Promise that resolves with the responses to the requests.
     *
     * @example
     * ```
     *  const requestConfig = {
     *      headers: {
     *          "Accept": "application/json",
     *          "Content-Type": "application/scim+json"
     *      },
     *      method: "GET",
     *      url: "https://api.asgardeo.io/scim2/me"
     *  };
     *
     *  const requestConfig2 = {
     *      headers: {
     *          "Accept": "application/json",
     *          "Content-Type": "application/scim+json"
     *      },
     *      method: "GET",
     *      url: "https://api.asgardeo.io/scim2/me"
     *  };
     *
     *  return auth.httpRequest([requestConfig, requestConfig2])
     *     .then((responses) => {
     *           response.forEach((response)=>{
     *              // console.log(response);
     *           });
     *      })
     *      .catch((error) => {
     *           // console.error(error);
     *      });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequestall
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */httpRequestAll(t){var l;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(l=this._client)||void 0===l?void 0:l.httpRequestAll(t)}))}
/**
     * This method allows you to send a request with a custom grant.
     *
     * @param {CustomGrantRequestParams} config - The request parameters.
     *
     * @return {Promise<HttpResponse<any> | SignInResponse>} - A Promise that resolves with
     * the value returned by the custom grant request.
     *
     * @example
     * ```
     * auth.customGrant({
     *   attachToken: false,
     *   data: {
     *       client_id: "{{clientId}}",
     *       grant_type: "account_switch",
     *       scope: "{{scope}}",
     *       token: "{{token}}",
     *   },
     *   id: "account-switch",
     *   returnResponse: true,
     *   returnsSession: true,
     *   signInRequired: true
     * });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#customgrant
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */requestCustomGrant(t){var l,i;return e(this,void 0,void 0,(function*(){if(t.signInRequired,yield this._validateMethod(),!t.id)return Promise.reject(new X("SPA-AUTH_CLIENT-RCG-NF01","The custom grant request id not found.","The id attribute of the custom grant config object passed as an argument should have a value."));const e=yield null===(l=this._client)||void 0===l?void 0:l.requestCustomGrant(t),n=this._onCustomGrant.get(t.id);return n&&n(null===(i=this._onCustomGrant)||void 0===i?void 0:i.get(t.id)),e}))}
/**
     * This method ends a user session. The access token is revoked and the session information is destroyed.
     *
     * **To fire a callback function after ending user session, use the `on()` method.**
     * **To learn more about the `on()` method:**
     * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}
     *
     * @return {Promise<boolean>} - A promise that resolves with `true` if the process is successful.
     *
     * @example
     * ```
     * auth.endUserSession();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#endusersession
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */revokeAccessToken(){var t;return e(this,void 0,void 0,(function*(){yield this._validateMethod();const e=yield null===(t=this._client)||void 0===t?void 0:t.revokeAccessToken();return this._onEndUserSession&&(yield this._onEndUserSession(e)),e}))}
/**
     * This method returns a Promise that resolves with an object containing the service endpoints.
     *
     * @return {Promise<ServiceResourcesType} - A Promise that resolves with an object containing the service endpoints.
     *
     * @example
     * ```
     * auth.getServiceEndpoints().then((endpoints) => {
     *      // console.log(endpoints);
     *  }).error((error) => {
     *      // console.error(error);
     *  });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getserviceendpoints
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getOIDCServiceEndpoints(){var t;return e(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(t=this._client)||void 0===t?void 0:t.getOIDCServiceEndpoints()}))}
/**
     * This methods returns the Axios http client.
     *
     * @return {HttpClientInstance} - The Axios HTTP client.
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getHttpClient(){if(this._client){if(this._storage!==L.WebWorker){return this._client.getHttpClient()}throw new X("SPA-AUTH_CLIENT-GHC-IV01","Http client cannot be returned.","The http client cannot be returned when the storage type is set to webWorker.")}throw new X("SPA-AUTH_CLIENT-GHC-NF02","The SDK is not initialized.","The SDK has not been initialized yet. Initialize the SDK using the initialize method before calling this method.")}
/**
     * This method decodes the payload of the id token and returns it.
     *
     * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with
     * the decoded payload of the id token.
     *
     * @example
     * ```
     * auth.getDecodedIDToken().then((response)=>{
     *     // console.log(response);
     * }).catch((error)=>{
     *     // console.error(error);
     * });
     * ```
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdecodedidtoken
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getDecodedIDToken(){var t;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(t=this._client)||void 0===t?void 0:t.getDecodedIDToken()}))}
/**
     * This method returns the CryptoHelper instance.
     *
     * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with
     * the CryptoHelper instance.
     *
     * @example
     * ```
     * auth.getCryptoHelper().then((response)=>{
     *     // console.log(response);
     * }).catch((error)=>{
     *     // console.error(error);
     * });
     * ```
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getCryptoHelper
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getCryptoHelper(){var t;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(t=this._client)||void 0===t?void 0:t.getCryptoHelper()}))}
/**
     * This method return the ID token.
     *
     * @return {Promise<string>} - A Promise that resolves with the ID token.
     *
     * @example
     * ```
     * const idToken = await auth.getIDToken();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIDToken
     *
     * @memberof AsgardeoAuthClient
     *
     * @preserve
     */getIDToken(){var t;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(),null===(t=this._client)||void 0===t?void 0:t.getIDToken()}))}
/**
     * This method return a Promise that resolves with the access token.
     *
     * **This method will not return the access token if the storage type is set to `webWorker`.**
     *
     * @return {Promise<string>} - A Promise that resolves with the access token.
     *
     * @example
     * ```
     *   auth.getAccessToken().then((token) => {
     *       // console.log(token);
     *   }).catch((error) => {
     *       // console.error(error);
     *   });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getAccessToken(){return e(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(L.WebWorker,L.BrowserMemory)].includes(this._storage))return Promise.reject(new X("SPA-AUTH_CLIENT-GAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getAccessToken()}))}
/**
     * This method return a Promise that resolves with the idp access token.
     *
     * **This method will not return the access token if the storage type is set to `webWorker`.**
     *
     * @return {Promise<string>} - A Promise that resolves with the idp access token.
     *
     * @example
     * ```
     *   auth.getIDPAccessToken().then((token) => {
     *       // console.log(token);
     *   }).catch((error) => {
     *       // console.error(error);
     *   });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getIDPAccessToken(){return e(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(L.WebWorker,L.BrowserMemory)].includes(this._storage))return Promise.reject(new X("SPA-AUTH_CLIENT-GIAT-IV01","The access token cannot be returned.","The access token cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getAccessToken()}))}
/**
     * This method return a Promise that resolves with the data layer object.
     *
     * **This method will not return the data layer object, if the storage type is set to `webWorker`.**
     *
     * @return {Promise<string>} - A Promise that resolves with the data layer object.
     *
     * @example
     * ```
     *   auth.getDataLayer().then((dataLayer) => {
     *       // console.log(dataLayer);
     *   }).catch((error) => {
     *       // console.error(error);
     *   });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdatalayer
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */getDataLayer(){return e(this,void 0,void 0,(function*(){if(yield this._validateMethod(),this._storage&&[(L.WebWorker,L.BrowserMemory)].includes(this._storage))return Promise.reject(new X("SPA-AUTH_CLIENT-GDL-IV01","The data layer cannot be returned.","The data layer cannot be returned when the storage type is set to webWorker or browserMemory."));return this._client.getDataLayer()}))}
/**
     * This method refreshes the access token.
     *
     * @return {TokenResponseInterface} - A Promise that resolves with an object containing
     * information about the refreshed access token.
     *
     * @example
     * ```
     * auth.refreshToken().then((response)=>{
     *      // console.log(response);
     * }).catch((error)=>{
     *      // console.error(error);
     * });
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#refreshtoken
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */refreshAccessToken(){var t;return e(this,void 0,void 0,(function*(){return yield this._validateMethod(!1),null===(t=this._client)||void 0===t?void 0:t.refreshAccessToken()}))}
/**
     * This method specifies if the user is authenticated or not.
     *
     * @return {Promise<boolean>} - A Promise that resolves with `true` if the user is authenticated.
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */isAuthenticated(){var t;return e(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(t=this._client)||void 0===t?void 0:t.isAuthenticated()}))}
/**
     * This method specifies if there is an active session in the browser or not.
     *
     * @return {Promise<boolean>} - A Promise that resolves with `true` if there is a session.
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */isSessionActive(){return e(this,void 0,void 0,(function*(){if(yield this._isInitialized(),this._storage&&[(L.WebWorker,L.BrowserMemory)].includes(this._storage))return Promise.reject(new X("SPA-AUTH_CLIENT-ISA-IV01","The active session cannot be returned.","The active session cannot be returned when the storage type is set to webWorker or browserMemory."));const e=this._client;return null==e?void 0:e.isSessionActive()}))}on(t,l,i){var n,d,o,c;return e(this,void 0,void 0,(function*(){if(yield this._isInitialized(),!l||"function"!=typeof l)throw new X("SPA-AUTH_CLIENT-ON-IV02","Invalid callback function.","The provided callback function is invalid.");switch(t){case T.SignIn:this._onSignInCallback=l;break;case T.SignOut:this._onSignOutCallback=l,(yield A.isSignOutSuccessful())&&this._onSignOutCallback();break;case T.RevokeAccessToken:this._onEndUserSession=l;break;case T.Initialize:this._onInitialize=l;break;case T.HttpRequestError:null===(n=this._client)||void 0===n||n.setHttpRequestErrorCallback(l);break;case T.HttpRequestFinish:null===(d=this._client)||void 0===d||d.setHttpRequestFinishCallback(l);break;case T.HttpRequestStart:null===(o=this._client)||void 0===o||o.setHttpRequestStartCallback(l);break;case T.HttpRequestSuccess:null===(c=this._client)||void 0===c||c.setHttpRequestSuccessCallback(l);break;case T.CustomGrant:i&&this._onCustomGrant.set(i,l);break;case T.SignOutFailed:{this._onSignOutFailedCallback=l;const e=A.didSignOutFail();e&&this._onSignOutFailedCallback(e);break}default:throw new X("SPA-AUTH_CLIENT-ON-IV01","Invalid hook.","The provided hook is invalid.")}}))}
/**
     * This method enables callback functions attached to the http client.
     *
     * @return {Promise<boolean>} - A promise that resolves with True.
     *
     * @example
     * ```
     * auth.enableHttpHandler();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#enableHttpHandler
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */enableHttpHandler(){var t;return e(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(t=this._client)||void 0===t?void 0:t.enableHttpHandler()}))}
/**
     * This method disables callback functions attached to the http client.
     *
     * @return {Promise<boolean>} - A promise that resolves with True.
     *
     * @example
     * ```
     * auth.disableHttpHandler();
     * ```
     *
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#disableHttpHandler
     *
     * @memberof AsgardeoSPAClient
     *
     * @preserve
     */disableHttpHandler(){var t;return e(this,void 0,void 0,(function*(){return yield this._isInitialized(),null===(t=this._client)||void 0===t?void 0:t.disableHttpHandler()}))}
/**
     * This method updates the configuration that was passed into the constructor when instantiating this class.
     *
     * @param {Partial<AuthClientConfig<T>>} config - A config object to update the SDK configurations with.
     *
     * @example
     * ```
     * const config = {
     *     signInRedirectURL: "http://localhost:3000/sign-in",
     *     clientID: "client ID",
     *     baseUrl: "https://api.asgardeo.io"
     * }
     * const auth.updateConfig(config);
     * ```
     * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master/lib#updateConfig
     *
     * @memberof AsgardeoAuthClient
     *
     * @preserve
     */updateConfig(t){return e(this,void 0,void 0,(function*(){if(yield this._isInitialized(),this._storage===L.WebWorker){const e=this._client;yield e.updateConfig(t)}else{const e=this._client;yield e.updateConfig(t)}}))}}an._instances=new Map;class sn extends Worker{constructor(){super(...arguments),this.onmessage=()=>null}}const Zn=t=>{const l=self;let i;l.onmessage=({data:l,ports:c})=>e(void 0,void 0,void 0,(function*(){var a,s,Z,u,r,b;const m=c[0];if("init"===l.type||i)switch(l.type){case"init":try{const c=Object.assign({},l.data);i=yield((t,l)=>e(void 0,void 0,void 0,(function*(){const i=new ll,n=new nn,d=new v;yield d.initialize(t,i,n);const o=new x(d),c=l(d,o),a=d.getDataLayer(),s=el.getInstance();return(null==s?void 0:s.init)&&(yield s.init(!0,(t=>e(void 0,void 0,void 0,(function*(){yield c.attachTokenToRequestConfig(t)}))))),{disableHttpHandler:()=>{c.disableHttpHandler(s)},enableHttpHandler:()=>{c.enableHttpHandler(s)},getAccessToken:()=>c.getAccessToken(),getAuthorizationURL:t=>e(void 0,void 0,void 0,(function*(){return d.getAuthorizationURL(t).then((t=>e(void 0,void 0,void 0,(function*(){var e;const l=null!==(e=new URL(t).searchParams.get(G))&&void 0!==e?e:"",i=yield d.getPKCECode(l);return{authorizationURL:t,pkce:i}})))).catch((e=>Promise.reject(e)))})),getBasicUserInfo:()=>e(void 0,void 0,void 0,(function*(){return c.getBasicUserInfo()})),getConfigData:()=>e(void 0,void 0,void 0,(function*(){return a.getConfigData()})),getCryptoHelper:()=>e(void 0,void 0,void 0,(function*(){return c.getCryptoHelper()})),getDecodedIDPIDToken:()=>e(void 0,void 0,void 0,(function*(){return c.getDecodedIDPIDToken()})),getDecodedIDToken:()=>e(void 0,void 0,void 0,(function*(){return c.getDecodedIDToken()})),getIDToken:()=>e(void 0,void 0,void 0,(function*(){return c.getIDToken()})),getOIDCServiceEndpoints:()=>e(void 0,void 0,void 0,(function*(){return c.getOIDCServiceEndpoints()})),getSignOutURL:()=>e(void 0,void 0,void 0,(function*(){return yield d.getSignOutURL()})),httpRequest:t=>e(void 0,void 0,void 0,(function*(){return yield c.httpRequest(s,t)})),httpRequestAll:t=>e(void 0,void 0,void 0,(function*(){return yield c.httpRequestAll(t,s)})),isAuthenticated:()=>c.isAuthenticated(),refreshAccessToken:()=>e(void 0,void 0,void 0,(function*(){try{return yield c.refreshAccessToken()}catch(e){return Promise.reject(e)}})),requestAccessToken:(t,l,i,n)=>e(void 0,void 0,void 0,(function*(){return yield c.requestAccessToken(t,l,void 0,i,n)})),requestCustomGrant:t=>e(void 0,void 0,void 0,(function*(){return yield c.requestCustomGrant(t)})),revokeAccessToken:()=>e(void 0,void 0,void 0,(function*(){const e=yield o.getRefreshTimeoutTimer();return d.revokeAccessToken().then((()=>(o.clearRefreshTokenTimeout(e),Promise.resolve(!0)))).catch((e=>Promise.reject(e)))})),setHttpRequestFinishCallback:e=>{(null==s?void 0:s.setHttpRequestFinishCallback)&&s.setHttpRequestFinishCallback(e)},setHttpRequestStartCallback:e=>{(null==s?void 0:s.setHttpRequestStartCallback)&&s.setHttpRequestStartCallback(e)},setHttpRequestSuccessCallback:e=>{(null==s?void 0:s.setHttpRequestSuccessCallback)&&s.setHttpRequestSuccessCallback(e)},setSessionState:t=>e(void 0,void 0,void 0,(function*(){yield a.setSessionDataParameter(h,t)})),signOut:()=>e(void 0,void 0,void 0,(function*(){return o.clearRefreshTokenTimeout(),yield d.getSignOutURL()})),startAutoRefreshToken:()=>e(void 0,void 0,void 0,(function*(){o.clearRefreshTokenTimeout(),o.refreshAccessTokenAutomatically(c)})),updateConfig:t=>e(void 0,void 0,void 0,(function*(){yield d.updateConfig(t)}))}})))(c,t),i.setHttpRequestFinishCallback(o),i.setHttpRequestStartCallback(n),i.setHttpRequestSuccessCallback(d),m.postMessage(B.generateSuccessMessage())}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get_auth_url":i.getAuthorizationURL(null==l?void 0:l.data).then((e=>{m.postMessage(B.generateSuccessMessage(e))})).catch((e=>{m.postMessage(B.generateFailureMessage(e))}));break;case"request_get_token":i.requestAccessToken(null===(a=null==l?void 0:l.data)||void 0===a?void 0:a.code,null===(s=null==l?void 0:l.data)||void 0===s?void 0:s.sessionState,null===(Z=null==l?void 0:l.data)||void 0===Z?void 0:Z.pkce,null===(u=null==l?void 0:l.data)||void 0===u?void 0:u.state).then((e=>{m.postMessage(B.generateSuccessMessage(e))})).catch((e=>{m.postMessage(B.generateFailureMessage(e))}));break;case"http-request":{const e=l.data,t=null==e?void 0:e.data;if(!0===(null===(b=null===(r=l.data)||void 0===r?void 0:r.data)||void 0===b?void 0:b.formData)){const l=new FormData;for(const e in t)"formData"!==e&&l.append(e,t[e]);e.data=l}i.httpRequest(e).then((e=>{m.postMessage(B.generateSuccessMessage(e))})).catch((e=>{m.postMessage(B.generateFailureMessage(e))}));break}case"http-request-all":i.httpRequestAll(l.data).then((e=>{m.postMessage(B.generateSuccessMessage(e))})).catch((e=>{m.postMessage(B.generateFailureMessage(e))}));break;case"sign-out":try{m.postMessage(B.generateSuccessMessage(yield i.signOut()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"request-custom-grant":i.requestCustomGrant(l.data).then((e=>{m.postMessage(B.generateSuccessMessage(e))})).catch((e=>{m.postMessage(B.generateFailureMessage(e))}));break;case"revoke-access-token":i.revokeAccessToken().then((e=>{m.postMessage(B.generateSuccessMessage(e))})).catch((e=>{m.postMessage(B.generateFailureMessage(e))}));break;case"get-oidc-service-endpoints":try{m.postMessage(B.generateSuccessMessage(yield i.getOIDCServiceEndpoints()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get-basic-user-info":try{m.postMessage(B.generateSuccessMessage(yield i.getBasicUserInfo()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get-decoded-id-token":try{m.postMessage(B.generateSuccessMessage(yield i.getDecodedIDToken()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get-crypto-helper":try{m.postMessage(B.generateSuccessMessage(yield i.getCryptoHelper()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get_id_token":try{m.postMessage(B.generateSuccessMessage(yield i.getIDToken()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"enable_http_handler":i.enableHttpHandler(),m.postMessage(B.generateSuccessMessage());break;case"disable_http_handler":i.disableHttpHandler(),m.postMessage(B.generateSuccessMessage());break;case"is_authenticated":try{m.postMessage(B.generateSuccessMessage(yield i.isAuthenticated()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get_sign_out_url":try{m.postMessage(B.generateSuccessMessage(yield i.getSignOutURL()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"refresh_access-token":try{m.postMessage(B.generateSuccessMessage(yield i.refreshAccessToken()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"start_auto_refresh_token":try{m.postMessage(B.generateSuccessMessage(i.startAutoRefreshToken()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"set_session_state":try{m.postMessage(B.generateSuccessMessage(yield i.setSessionState(null==l?void 0:l.data)))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"update_config":try{m.postMessage(B.generateSuccessMessage(yield i.updateConfig(null==l?void 0:l.data)))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;case"get_config_data":try{m.postMessage(B.generateSuccessMessage(yield i.getConfigData()))}catch(e){m.postMessage(B.generateFailureMessage(e))}break;default:null==m||m.postMessage(B.generateFailureMessage(new X("SPA-CLIENT_WORKER-ONMSG-IV02","The message type is invalid.",`The message type provided, ${l.type}, is invalid.`)))}else m.postMessage(B.generateFailureMessage(new X("SPA-CLIENT_WORKER-ONMSG-NF01","The web worker has not been initialized yet.","The initialize method needs to be called before the specified operation can be carried out.")))}));const n=()=>{l.postMessage({type:"request-start"})},d=e=>{l.postMessage({data:JSON.stringify(null!=e?e:""),type:"request-success"})},o=()=>{l.postMessage({type:"request-finish"})}};export{R as ASGARDEO_SESSION_ACTIVE,b as AUTHORIZATION_CODE,v as AsgardeoAuthClient,X as AsgardeoAuthException,an as AsgardeoSPAClient,z as AuthenticationHelper,y as AuthenticationUtils,o as CLIENT_ID_TAG,c as CLIENT_SECRET_TAG,W as CryptoHelper,S as DataLayer,T as Hooks,dn as MainThreadClient,p as OIDC_SCOPE,Z as PKCE_CODE_VERIFIER,u as PKCE_SEPARATOR,s as REFRESH_TOKEN_TIMER,l as ResponseMode,d as SCOPE_TAG,h as SESSION_STATE,I as SIGN_OUT_SUCCESS_PARAM,m as SIGN_OUT_URL,x as SPAHelper,A as SPAUtils,G as STATE,r as SUPPORTED_SIGNATURE_ALGORITHMS,L as Storage,a as Stores,U as TOKEN_REQUEST_CONFIG_KEY,i as TOKEN_TAG,n as USERNAME_TAG,sn as WebWorkerClass,on as WebWorkerClient,Zn as workerReceiver};
//# sourceMappingURL=asgardeo-spa.production.esm.js.map
